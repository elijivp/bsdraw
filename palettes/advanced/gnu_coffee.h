#ifndef _GNU_COFFEE_H
#define _GNU_COFFEE_H

#include "../bsipalette.h"

const unsigned int colors_gnu_coffee[] = {
                                          0x00000001, 0x00000004, 0x00000007, 0x0000000a, 0x0000000d, 0x00000010, 0x00000013, 0x00000016, 
                                          0x00000019, 0x0000001c, 0x0000001f, 0x00000022, 0x00000025, 0x00000028, 0x0000002b, 0x0000002e, 
                                          0x00000031, 0x00000034, 0x00000037, 0x0000003a, 0x0000003d, 0x00000040, 0x00000043, 0x00000046, 
                                          0x00000049, 0x0000004c, 0x0000004f, 0x00000052, 0x00000055, 0x00000058, 0x0000005b, 0x0000005e, 
                                          0x00000061, 0x00000064, 0x00000067, 0x0000006a, 0x0000006d, 0x00000070, 0x00000073, 0x00000076, 
                                          0x00000079, 0x0000007c, 0x0000007f, 0x00000082, 0x00000085, 0x00000088, 0x0000008b, 0x0000008e, 
                                          0x00000091, 0x00000094, 0x00000097, 0x0000009a, 0x0000009d, 0x000000a0, 0x000000a3, 0x000000a6, 
                                          0x000000a9, 0x000000ac, 0x000000af, 0x000000b2, 0x000000b5, 0x000000b8, 0x000000bb, 0x000000be, 
                                          0x000000c1, 0x000000c4, 0x000000c7, 0x000000ca, 0x000000cd, 0x000000d0, 0x000000d3, 0x000000d6, 
                                          0x000000d9, 0x000000dc, 0x000000df, 0x000000e2, 0x000000e5, 0x000000e8, 0x000000eb, 0x000000ee, 
                                          0x000000f1, 0x000000f4, 0x000000f7, 0x000000fa, 0x000000fd, 0x000000ff, 0x000003ff, 0x000006ff, 
                                          0x000009ff, 0x00000cff, 0x00000fff, 0x000012ff, 0x000015ff, 0x000018ff, 0x00001bff, 0x00001eff, 
                                          0x000021ff, 0x000024ff, 0x000027ff, 0x00002aff, 0x00002dff, 0x000030ff, 0x000033ff, 0x000036ff, 
                                          0x000039ff, 0x00003cff, 0x00003fff, 0x000042ff, 0x000045ff, 0x000048ff, 0x00004bff, 0x00004eff, 
                                          0x000051ff, 0x000054ff, 0x000057ff, 0x00005aff, 0x00005dff, 0x000060ff, 0x000063ff, 0x000066ff, 
                                          0x000069ff, 0x00006cff, 0x00006fff, 0x000072ff, 0x000075ff, 0x000078ff, 0x00007bff, 0x00007eff, 
                                          0x000081ff, 0x000084ff, 0x000087ff, 0x00008aff, 0x00008dff, 0x000090ff, 0x000093ff, 0x000096ff, 
                                          0x000099ff, 0x00009cff, 0x00009fff, 0x0000a2ff, 0x0000a5ff, 0x0000a8ff, 0x0000abff, 0x0000aeff, 
                                          0x0000b1ff, 0x0000b4ff, 0x0000b7ff, 0x0000baff, 0x0000bdff, 0x0000c0ff, 0x0000c3ff, 0x0000c6ff, 
                                          0x0000c9ff, 0x0000ccff, 0x0000cfff, 0x0000d2ff, 0x0000d5ff, 0x0000d8ff, 0x0000dbff, 0x0000deff, 
                                          0x0000e1ff, 0x0000e4ff, 0x0000e7ff, 0x0000eaff, 0x0000edff, 0x0000f0ff, 0x0000f3ff, 0x0000f6ff, 
                                          0x0000f9ff, 0x0000fcff, 0x0000ffff, 0x0002ffff, 0x0005ffff, 0x0008ffff, 0x000bffff, 0x000effff, 
                                          0x0011ffff, 0x0014ffff, 0x0017ffff, 0x001affff, 0x001dffff, 0x0020ffff, 0x0023ffff, 0x0026ffff, 
                                          0x0029ffff, 0x002cffff, 0x002fffff, 0x0032ffff, 0x0035ffff, 0x0038ffff, 0x003bffff, 0x003effff, 
                                          0x0041ffff, 0x0044ffff, 0x0047ffff, 0x004affff, 0x004dffff, 0x0050ffff, 0x0053ffff, 0x0056ffff, 
                                          0x0059ffff, 0x005cffff, 0x005fffff, 0x0062ffff, 0x0065ffff, 0x0068ffff, 0x006bffff, 0x006effff, 
                                          0x0071ffff, 0x0074ffff, 0x0077ffff, 0x007affff, 0x007dffff, 0x0080ffff, 0x0083ffff, 0x0086ffff, 
                                          0x0089ffff, 0x008cffff, 0x008fffff, 0x0092ffff, 0x0095ffff, 0x0098ffff, 0x009bffff, 0x009effff, 
                                          0x00a1ffff, 0x00a4ffff, 0x00a7ffff, 0x00aaffff, 0x00adffff, 0x00b0ffff, 0x00b3ffff, 0x00b6ffff, 
                                          0x00b9ffff, 0x00bcffff, 0x00bfffff, 0x00c2ffff, 0x00c5ffff, 0x00c8ffff, 0x00cbffff, 0x00ceffff, 
                                          0x00d1ffff, 0x00d4ffff, 0x00d7ffff, 0x00daffff, 0x00ddffff, 0x00e0ffff, 0x00e3ffff, 0x00e6ffff, 
                                          0x00e9ffff, 0x00ecffff, 0x00efffff, 0x00f2ffff, 0x00f5ffff, 0x00f8ffff, 0x00fbffff, 0x00feffff
};

const PaletteConstFWD<sizeof(colors_gnu_coffee) / sizeof(unsigned int)> palette_gnu_coffee(colors_gnu_coffee);
const PaletteConstBWD<sizeof(colors_gnu_coffee) / sizeof(unsigned int)> palette_gnu_coffee_inv(colors_gnu_coffee);

typedef PaletteConstFWD<sizeof(colors_gnu_coffee) / sizeof(unsigned int)> palette_gnu_coffee_t;

#endif // _GNU_COFFEE_H
