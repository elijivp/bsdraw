#ifndef _GNU_LATTE_H
#define _GNU_LATTE_H

#include "../bsipalette.h"

const unsigned int colors_gnu_latte[] = {
                                         0x00000001, 0x00000003, 0x00000005, 0x00000007, 0x00000009, 0x0000000b, 0x0000000d, 0x0000000f, 
                                         0x00000011, 0x00000013, 0x00000015, 0x00000017, 0x00000019, 0x0000001b, 0x0000001d, 0x0000001f, 
                                         0x00000021, 0x00000023, 0x00000025, 0x00000027, 0x00000029, 0x0000002b, 0x0000002d, 0x0000002f, 
                                         0x00000031, 0x00000033, 0x00000035, 0x00000037, 0x00000039, 0x0000003b, 0x0000003d, 0x0000003f, 
                                         0x00000041, 0x00000043, 0x00000045, 0x00000047, 0x00000049, 0x0000004b, 0x0000004d, 0x0000004f, 
                                         0x00000051, 0x00000053, 0x00000055, 0x00000057, 0x00000059, 0x0000005b, 0x0000005d, 0x0000005f, 
                                         0x00000061, 0x00000063, 0x00000065, 0x00000067, 0x00000069, 0x0000006b, 0x0000006d, 0x0000006f, 
                                         0x00000071, 0x00000073, 0x00000075, 0x00000077, 0x00000079, 0x0000007b, 0x0000007d, 0x0000007f, 
                                         0x00000180, 0x00000382, 0x00000584, 0x00000786, 0x00000988, 0x00000b8a, 0x00000d8c, 0x00000f8e, 
                                         0x00001190, 0x00001392, 0x00001594, 0x00001796, 0x00001998, 0x00001b9a, 0x00001d9c, 0x00001f9e, 
                                         0x000021a0, 0x000023a2, 0x000025a4, 0x000027a6, 0x000029a8, 0x00002baa, 0x00002dac, 0x00002fae, 
                                         0x000031b0, 0x000033b2, 0x000035b4, 0x000037b6, 0x000039b8, 0x00003bba, 0x00003dbc, 0x00003fbe, 
                                         0x000041c0, 0x000043c2, 0x000045c4, 0x000047c6, 0x000049c8, 0x00004bca, 0x00004dcc, 0x00004fce, 
                                         0x000051d0, 0x000053d2, 0x000055d4, 0x000057d6, 0x000059d8, 0x00005bda, 0x00005ddc, 0x00005fde, 
                                         0x000061e0, 0x000063e2, 0x000065e4, 0x000067e6, 0x000069e8, 0x00006bea, 0x00006dec, 0x00006fee, 
                                         0x000071f0, 0x000073f2, 0x000075f4, 0x000077f6, 0x000079f8, 0x00007bfa, 0x00007dfc, 0x00007ffe, 
                                         0x000180ff, 0x000382ff, 0x000584ff, 0x000786ff, 0x000988ff, 0x000b8aff, 0x000d8cff, 0x000f8eff, 
                                         0x001190ff, 0x001392ff, 0x001594ff, 0x001796ff, 0x001998ff, 0x001b9aff, 0x001d9cff, 0x001f9eff, 
                                         0x0021a0ff, 0x0023a2ff, 0x0025a4ff, 0x0027a6ff, 0x0029a8ff, 0x002baaff, 0x002dacff, 0x002faeff, 
                                         0x0031b0ff, 0x0033b2ff, 0x0035b4ff, 0x0037b6ff, 0x0039b8ff, 0x003bbaff, 0x003dbcff, 0x003fbeff, 
                                         0x0041c0ff, 0x0043c2ff, 0x0045c4ff, 0x0047c6ff, 0x0049c8ff, 0x004bcaff, 0x004dccff, 0x004fceff, 
                                         0x0051d0ff, 0x0053d2ff, 0x0055d4ff, 0x0057d6ff, 0x0059d8ff, 0x005bdaff, 0x005ddcff, 0x005fdeff, 
                                         0x0061e0ff, 0x0063e2ff, 0x0065e4ff, 0x0067e6ff, 0x0069e8ff, 0x006beaff, 0x006decff, 0x006feeff, 
                                         0x0071f0ff, 0x0073f2ff, 0x0075f4ff, 0x0077f6ff, 0x0079f8ff, 0x007bfaff, 0x007dfcff, 0x007ffeff, 
                                         0x0080ffff, 0x0082ffff, 0x0084ffff, 0x0086ffff, 0x0088ffff, 0x008affff, 0x008cffff, 0x008effff, 
                                         0x0090ffff, 0x0092ffff, 0x0094ffff, 0x0096ffff, 0x0098ffff, 0x009affff, 0x009cffff, 0x009effff, 
                                         0x00a0ffff, 0x00a2ffff, 0x00a4ffff, 0x00a6ffff, 0x00a8ffff, 0x00aaffff, 0x00acffff, 0x00aeffff, 
                                         0x00b0ffff, 0x00b2ffff, 0x00b4ffff, 0x00b6ffff, 0x00b8ffff, 0x00baffff, 0x00bcffff, 0x00beffff, 
                                         0x00c0ffff, 0x00c2ffff, 0x00c4ffff, 0x00c6ffff, 0x00c8ffff, 0x00caffff, 0x00ccffff, 0x00ceffff, 
                                         0x00d0ffff, 0x00d2ffff, 0x00d4ffff, 0x00d6ffff, 0x00d8ffff, 0x00daffff, 0x00dcffff, 0x00deffff, 
                                         0x00e0ffff, 0x00e2ffff, 0x00e4ffff, 0x00e6ffff, 0x00e8ffff, 0x00eaffff, 0x00ecffff, 0x00eeffff, 
                                         0x00f0ffff, 0x00f2ffff, 0x00f4ffff, 0x00f6ffff, 0x00f8ffff, 0x00faffff, 0x00fcffff, 0x00feffff
};

const PaletteConstFWD<sizeof(colors_gnu_latte) / sizeof(unsigned int)> palette_gnu_latte(colors_gnu_latte);
const PaletteConstBWD<sizeof(colors_gnu_latte) / sizeof(unsigned int)> palette_gnu_latte_inv(colors_gnu_latte);

typedef PaletteConstFWD<sizeof(colors_gnu_latte) / sizeof(unsigned int)> palette_gnu_latte_t;

#endif // _GNU_LATTE_H