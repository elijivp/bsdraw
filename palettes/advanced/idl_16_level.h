#ifndef _IDL_16_LEVEL_H
#define _IDL_16_LEVEL_H

#include "../bsipalette.h"

const unsigned int colors_idl_16_level[] = {
                                            0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 
                                            0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 0x00005400, 
                                            0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 
                                            0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 0x0000a800, 
                                            0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 
                                            0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 0x0000ff00, 
                                            0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 
                                            0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 0x0054ff00, 
                                            0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 
                                            0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 0x00a8ff00, 
                                            0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 
                                            0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 
                                            0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 
                                            0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 0x00ff0000, 
                                            0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 
                                            0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 0x00ff0080, 
                                            0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 
                                            0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 0x00dc00ff, 
                                            0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 
                                            0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 0x00b400ff, 
                                            0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 
                                            0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 0x008000ff, 
                                            0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 
                                            0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 0x004000ff, 
                                            0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 
                                            0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff, 
                                            0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 
                                            0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 0x00bebedc, 
                                            0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 
                                            0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 0x00dcdcdc, 
                                            0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 
                                            0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff
};

const PaletteConstFWD<sizeof(colors_idl_16_level) / sizeof(unsigned int)> palette_idl_16_level(colors_idl_16_level);
const PaletteConstBWD<sizeof(colors_idl_16_level) / sizeof(unsigned int)> palette_idl_16_level_inv(colors_idl_16_level);

typedef PaletteConstFWD<sizeof(colors_idl_16_level) / sizeof(unsigned int)> palette_idl_16_level_t;

#endif // _IDL_16_LEVEL_H