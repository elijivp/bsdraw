#ifndef _IDL_BURD_H
#define _IDL_BURD_H

#include "../bsipalette.h"

const unsigned int colors_idl_BuRd[] = {
                                        0x00000000, 0x00010000, 0x00020000, 0x00030300, 0x00060700, 0x000a0c00, 0x000e1000, 0x00121400, 
                                        0x00171800, 0x001b1c00, 0x001f2100, 0x00232500, 0x00282900, 0x002c2d00, 0x00303100, 0x00343600, 
                                        0x00383a00, 0x003d3e00, 0x00414200, 0x00454600, 0x00494a00, 0x004e4f00, 0x00525300, 0x00565700, 
                                        0x005a5b00, 0x005f5f00, 0x00636400, 0x00676800, 0x006b6c00, 0x00707000, 0x00747400, 0x00787900, 
                                        0x007c7d00, 0x00808100, 0x00858500, 0x00898900, 0x008d8d00, 0x00919200, 0x00969600, 0x009a9a00, 
                                        0x009e9e00, 0x00a2a200, 0x00a7a700, 0x00abab00, 0x00afaf00, 0x00b3b300, 0x00b7b700, 0x00bcbc00, 
                                        0x00c0c000, 0x00c4c400, 0x00c8c800, 0x00cdcc00, 0x00d1d000, 0x00d5d500, 0x00d9d900, 0x00dedd00, 
                                        0x00e2e100, 0x00e6e500, 0x00eaea00, 0x00efee00, 0x00f3f200, 0x00f7f600, 0x00fbfa00, 0x00ffff00, 
                                        0x00fffe00, 0x00fffa00, 0x00fff600, 0x00fff200, 0x00ffee00, 0x00ffea00, 0x00ffe600, 0x00ffe200, 
                                        0x00ffde00, 0x00ffda00, 0x00ffd600, 0x00ffd200, 0x00ffce00, 0x00ffca00, 0x00ffc600, 0x00ffc200, 
                                        0x00ffbe00, 0x00ffba00, 0x00ffb600, 0x00ffb200, 0x00ffae00, 0x00ffaa00, 0x00ffa600, 0x00ffa200, 
                                        0x00ff9e00, 0x00ff9a00, 0x00ff9600, 0x00ff9200, 0x00ff8e00, 0x00ff8a00, 0x00ff8600, 0x00ff8100, 
                                        0x00ff7d00, 0x00ff7900, 0x00ff7500, 0x00ff7100, 0x00ff6d00, 0x00ff6900, 0x00ff6500, 0x00ff6100, 
                                        0x00ff5d00, 0x00ff5900, 0x00ff5500, 0x00ff5100, 0x00ff4d00, 0x00ff4900, 0x00ff4500, 0x00ff4100, 
                                        0x00ff3d00, 0x00ff3900, 0x00ff3500, 0x00ff3100, 0x00ff2d00, 0x00ff2900, 0x00ff2500, 0x00ff2100, 
                                        0x00ff1d00, 0x00ff1900, 0x00ff1500, 0x00ff1100, 0x00ff0d00, 0x00ff0900, 0x00ff0500, 0x00ff0100, 
                                        0x00ff0000, 0x00ff0004, 0x00ff0008, 0x00ff000c, 0x00ff0010, 0x00ff0014, 0x00ff0018, 0x00ff001c, 
                                        0x00ff0020, 0x00ff0024, 0x00ff0028, 0x00ff002c, 0x00ff0030, 0x00ff0034, 0x00ff0038, 0x00ff003c, 
                                        0x00ff0040, 0x00ff0044, 0x00ff0048, 0x00ff004c, 0x00ff0050, 0x00ff0054, 0x00ff0058, 0x00ff005c, 
                                        0x00ff0060, 0x00ff0064, 0x00ff0068, 0x00ff006c, 0x00ff0070, 0x00ff0074, 0x00ff0078, 0x00ff007d, 
                                        0x00ff0081, 0x00ff0085, 0x00ff0089, 0x00ff008d, 0x00ff0091, 0x00ff0095, 0x00ff0099, 0x00ff009d, 
                                        0x00ff00a1, 0x00ff00a5, 0x00ff00a9, 0x00ff00ad, 0x00ff00b1, 0x00ff00b5, 0x00ff00b9, 0x00ff00bd, 
                                        0x00ff00c1, 0x00ff00c5, 0x00ff00c9, 0x00ff00cd, 0x00ff00d1, 0x00ff00d5, 0x00ff00d9, 0x00ff00dd, 
                                        0x00ff00e1, 0x00ff00e5, 0x00ff00e9, 0x00ff00ed, 0x00ff00f1, 0x00ff00f5, 0x00ff00f9, 0x00ff00fd, 
                                        0x00ff00ff, 0x00fc00ff, 0x00f800ff, 0x00f400ff, 0x00f000ff, 0x00ec00ff, 0x00e800ff, 0x00e400ff, 
                                        0x00e000ff, 0x00dc00ff, 0x00d800ff, 0x00d300ff, 0x00cf00ff, 0x00cb00ff, 0x00c700ff, 0x00c300ff, 
                                        0x00bf00ff, 0x00bb00ff, 0x00b700ff, 0x00b300ff, 0x00af00ff, 0x00aa00ff, 0x00a600ff, 0x00a200ff, 
                                        0x009e00ff, 0x009a00ff, 0x009600ff, 0x009200ff, 0x008e00ff, 0x008a00ff, 0x008600ff, 0x008200ff, 
                                        0x007d00ff, 0x007900ff, 0x007500ff, 0x007100ff, 0x006d00ff, 0x006900ff, 0x006500ff, 0x006100ff, 
                                        0x005d00ff, 0x005900ff, 0x005400ff, 0x005000ff, 0x004c00ff, 0x004800ff, 0x004400ff, 0x004000ff, 
                                        0x003c00ff, 0x003800ff, 0x003400ff, 0x003000ff, 0x002c00ff, 0x002700ff, 0x002300ff, 0x001f00ff, 
                                        0x001b00ff, 0x001700ff, 0x001300ff, 0x000f00ff, 0x000b00ff, 0x000700ff, 0x000300ff, 0x000000ff
};

const PaletteConstFWD<sizeof(colors_idl_BuRd) / sizeof(unsigned int)> palette_idl_BuRd(colors_idl_BuRd);
const PaletteConstBWD<sizeof(colors_idl_BuRd) / sizeof(unsigned int)> palette_idl_BuRd_inv(colors_idl_BuRd);

typedef PaletteConstFWD<sizeof(colors_idl_BuRd) / sizeof(unsigned int)> palette_idl_BuRd_t;

#endif // _IDL_BURD_H