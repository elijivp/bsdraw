#ifndef _IDL_STEPS_H
#define _IDL_STEPS_H

#include "../bsipalette.h"

const unsigned int colors_idl_steps[] = {
                                         0x00000000, 0x00002a00, 0x00005400, 0x00007f00, 0x0000a900, 0x0000d300, 0x0000fe00, 0x0000f600, 
                                         0x0000ec00, 0x0000e200, 0x0000d900, 0x0000cf00, 0x0000c500, 0x0000bb00, 0x0000b200, 0x0000a800, 
                                         0x00009e00, 0x00009400, 0x00008b00, 0x00008100, 0x00007700, 0x00006d00, 0x00006300, 0x00005a00, 
                                         0x00005000, 0x00004600, 0x00003c00, 0x00003300, 0x00002900, 0x00001f00, 0x00001500, 0x00000b00, 
                                         0x00000200, 0x00070000, 0x000f0000, 0x00170000, 0x001f0000, 0x00270000, 0x00300000, 0x00380000, 
                                         0x00400000, 0x00480000, 0x00500000, 0x00590000, 0x00610000, 0x00690000, 0x00710000, 0x00790000, 
                                         0x00820000, 0x008a0000, 0x00920000, 0x009a0000, 0x00a20000, 0x00ab0000, 0x00b30000, 0x00bb0000, 
                                         0x00c30000, 0x00cb0000, 0x00d40000, 0x00dc0000, 0x00e40000, 0x00ec0000, 0x00f40000, 0x00fc0000, 
                                         0x00010000, 0x00060003, 0x000b000b, 0x00100014, 0x0015001c, 0x001a0024, 0x001f002c, 0x00240034, 
                                         0x0029003c, 0x002d0044, 0x0032004c, 0x00370054, 0x003c005d, 0x00410065, 0x0046006d, 0x004b0075, 
                                         0x0050007d, 0x00550085, 0x005a008d, 0x005f0095, 0x0064009d, 0x006900a6, 0x006e00ae, 0x007300b6, 
                                         0x007800be, 0x007d00c6, 0x008200ce, 0x008700d6, 0x008c00de, 0x009100e7, 0x009600ef, 0x009b00f7, 
                                         0x00000001, 0x00000001, 0x00000002, 0x00000003, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 
                                         0x00000007, 0x00000008, 0x00000009, 0x0000000b, 0x0000000c, 0x0000000e, 0x0000000f, 0x00000011, 
                                         0x00000012, 0x00000014, 0x00000016, 0x00000018, 0x0000001a, 0x0000001c, 0x0000001e, 0x00000021, 
                                         0x00000023, 0x00000026, 0x00000028, 0x0000002b, 0x0000002e, 0x00000031, 0x00000034, 0x00000037, 
                                         0x0000003a, 0x0000003d, 0x00000041, 0x00000044, 0x00000048, 0x0000004b, 0x0000004f, 0x00000053, 
                                         0x00000056, 0x0000005a, 0x0000005e, 0x00000062, 0x00000066, 0x0000006a, 0x0000006e, 0x00000072, 
                                         0x00000077, 0x0000007b, 0x0000007f, 0x00000083, 0x00000087, 0x0000008b, 0x0000008f, 0x00000093, 
                                         0x00000097, 0x0000009b, 0x0000009f, 0x000000a3, 0x000000a7, 0x000000ab, 0x000000ae, 0x000000b2, 
                                         0x000000b5, 0x000000b9, 0x000000bc, 0x000000c0, 0x000000c3, 0x000000c6, 0x000000c9, 0x000000cc, 
                                         0x000000cf, 0x000000d1, 0x000000d4, 0x000000d7, 0x000000d9, 0x000000db, 0x000000de, 0x000000e0, 
                                         0x000000e2, 0x000000e4, 0x000000e6, 0x000000e7, 0x000000e9, 0x000000eb, 0x000000ec, 0x000000ee, 
                                         0x000000ef, 0x000000f0, 0x000000f2, 0x000000f3, 0x000000f4, 0x000000f5, 0x000000f6, 0x000000f6, 
                                         0x000000f7, 0x000000f8, 0x000000f9, 0x000001f9, 0x000003fa, 0x000004fa, 0x000006fb, 0x000007fb, 
                                         0x000009fc, 0x00000bfc, 0x00000cfd, 0x00000efd, 0x000010fd, 0x000012fe, 0x000014fe, 0x000016fe, 
                                         0x000018fe, 0x00001afe, 0x00001cff, 0x00001fff, 0x000021ff, 0x000124ff, 0x000326ff, 0x000429ff, 
                                         0x00062bff, 0x00082eff, 0x000a31ff, 0x000c34ff, 0x000f37ff, 0x00123bff, 0x00153eff, 0x001841ff, 
                                         0x001b45ff, 0x001f48ff, 0x00234cff, 0x002750ff, 0x002c54ff, 0x003058ff, 0x00365dff, 0x003b61ff, 
                                         0x004166ff, 0x00476aff, 0x004d6fff, 0x005474ff, 0x005b7aff, 0x00627fff, 0x006984ff, 0x00718aff, 
                                         0x007990ff, 0x008196ff, 0x00899cff, 0x0091a2ff, 0x009aa9ff, 0x00a3b0ff, 0x00abb6ff, 0x00b4bdff, 
                                         0x00bdc5ff, 0x00c6ccff, 0x00ced4ff, 0x00d7dcff, 0x00e0e4ff, 0x00e8ecff, 0x00f0f4ff, 0x00f8fdff
};

const PaletteConstFWD<sizeof(colors_idl_steps) / sizeof(unsigned int)> palette_idl_steps(colors_idl_steps);
const PaletteConstBWD<sizeof(colors_idl_steps) / sizeof(unsigned int)> palette_idl_steps_inv(colors_idl_steps);

typedef PaletteConstFWD<sizeof(colors_idl_steps) / sizeof(unsigned int)> palette_idl_steps_t;

#endif // _IDL_STEPS_H