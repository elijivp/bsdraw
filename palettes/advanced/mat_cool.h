#ifndef _MAT_COOL_H
#define _MAT_COOL_H
#include "../bstexpalette.h"
const unsigned int colors_mat_cool[] = {
                                        0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00ffff00, 0x00fffe01, 0x00fffd02, 0x00fffc03, 0x00fffb04, 
                                        0x00fffa05, 0x00fff906, 0x00fff807, 0x00fff708, 0x00fff609, 0x00fff50a, 0x00fff40b, 0x00fff30c, 
                                        0x00fff20d, 0x00fff10e, 0x00fff00f, 0x00ffef10, 0x00ffee11, 0x00ffed12, 0x00ffec13, 0x00ffeb14, 
                                        0x00ffea15, 0x00ffe916, 0x00ffe817, 0x00ffe718, 0x00ffe619, 0x00ffe51a, 0x00ffe41b, 0x00ffe31c, 
                                        0x00ffe21d, 0x00ffe11e, 0x00ffe01f, 0x00ffdf20, 0x00ffde21, 0x00ffdd22, 0x00ffdc23, 0x00ffdb24, 
                                        0x00ffda25, 0x00ffd926, 0x00ffd827, 0x00ffd728, 0x00ffd629, 0x00ffd52a, 0x00ffd42b, 0x00ffd32c, 
                                        0x00ffd22d, 0x00ffd12e, 0x00ffd02f, 0x00ffcf30, 0x00ffce31, 0x00ffcd32, 0x00ffcc33, 0x00ffcb34, 
                                        0x00ffca35, 0x00ffc936, 0x00ffc837, 0x00ffc738, 0x00ffc639, 0x00ffc53a, 0x00ffc43b, 0x00ffc33c, 
                                        0x00ffc23d, 0x00ffc13e, 0x00ffc03f, 0x00ffbf40, 0x00ffbe41, 0x00ffbd42, 0x00ffbc43, 0x00ffbb44, 
                                        0x00ffba45, 0x00ffb946, 0x00ffb847, 0x00ffb748, 0x00ffb649, 0x00ffb54a, 0x00ffb44b, 0x00ffb34c, 
                                        0x00ffb24d, 0x00ffb14e, 0x00ffb04f, 0x00ffaf50, 0x00ffae51, 0x00ffad52, 0x00ffac53, 0x00ffab54, 
                                        0x00ffa956, 0x00ffa857, 0x00ffa758, 0x00ffa659, 0x00ffa55a, 0x00ffa45b, 0x00ffa35c, 0x00ffa25d, 
                                        0x00ffa15e, 0x00ffa05f, 0x00ff9f60, 0x00ff9e61, 0x00ff9d62, 0x00ff9c63, 0x00ff9b64, 0x00ff9a65, 
                                        0x00ff9966, 0x00ff9867, 0x00ff9768, 0x00ff9669, 0x00ff956a, 0x00ff946b, 0x00ff936c, 0x00ff926d, 
                                        0x00ff916e, 0x00ff906f, 0x00ff8f70, 0x00ff8e71, 0x00ff8d72, 0x00ff8c73, 0x00ff8b74, 0x00ff8a75, 
                                        0x00ff8976, 0x00ff8877, 0x00ff8778, 0x00ff8679, 0x00ff857a, 0x00ff847b, 0x00ff837c, 0x00ff827d, 
                                        0x00ff817e, 0x00ff807f, 0x00ff7f80, 0x00ff7e81, 0x00ff7d82, 0x00ff7c83, 0x00ff7b84, 0x00ff7a85, 
                                        0x00ff7986, 0x00ff7887, 0x00ff7788, 0x00ff7689, 0x00ff758a, 0x00ff748b, 0x00ff738c, 0x00ff728d, 
                                        0x00ff718e, 0x00ff708f, 0x00ff6f90, 0x00ff6e91, 0x00ff6d92, 0x00ff6c93, 0x00ff6b94, 0x00ff6a95, 
                                        0x00ff6996, 0x00ff6897, 0x00ff6798, 0x00ff6699, 0x00ff659a, 0x00ff649b, 0x00ff639c, 0x00ff629d, 
                                        0x00ff619e, 0x00ff609f, 0x00ff5fa0, 0x00ff5ea1, 0x00ff5da2, 0x00ff5ca3, 0x00ff5ba4, 0x00ff5aa5, 
                                        0x00ff59a6, 0x00ff58a7, 0x00ff57a8, 0x00ff56a9, 0x00ff54ab, 0x00ff53ac, 0x00ff52ad, 0x00ff51ae, 
                                        0x00ff50af, 0x00ff4fb0, 0x00ff4eb1, 0x00ff4db2, 0x00ff4cb3, 0x00ff4bb4, 0x00ff4ab5, 0x00ff49b6, 
                                        0x00ff48b7, 0x00ff47b8, 0x00ff46b9, 0x00ff45ba, 0x00ff44bb, 0x00ff43bc, 0x00ff42bd, 0x00ff41be, 
                                        0x00ff40bf, 0x00ff3fc0, 0x00ff3ec1, 0x00ff3dc2, 0x00ff3cc3, 0x00ff3bc4, 0x00ff3ac5, 0x00ff39c6, 
                                        0x00ff38c7, 0x00ff37c8, 0x00ff36c9, 0x00ff35ca, 0x00ff34cb, 0x00ff33cc, 0x00ff32cd, 0x00ff31ce, 
                                        0x00ff30cf, 0x00ff2fd0, 0x00ff2ed1, 0x00ff2dd2, 0x00ff2cd3, 0x00ff2bd4, 0x00ff2ad5, 0x00ff29d6, 
                                        0x00ff28d7, 0x00ff27d8, 0x00ff26d9, 0x00ff25da, 0x00ff24db, 0x00ff23dc, 0x00ff22dd, 0x00ff21de, 
                                        0x00ff20df, 0x00ff1fe0, 0x00ff1ee1, 0x00ff1de2, 0x00ff1ce3, 0x00ff1be4, 0x00ff1ae5, 0x00ff19e6, 
                                        0x00ff18e7, 0x00ff17e8, 0x00ff16e9, 0x00ff15ea, 0x00ff14eb, 0x00ff13ec, 0x00ff12ed, 0x00ff11ee, 
                                        0x00ff10ef, 0x00ff0ff0, 0x00ff0ef1, 0x00ff0df2, 0x00ff0cf3, 0x00ff0bf4, 0x00ff0af5, 0x00ff09f6, 
                                        0x00ff08f7, 0x00ff07f8, 0x00ff06f9, 0x00ff05fa, 0x00ff04fb, 0x00ff03fc, 0x00ff02fd, 0x00ff01fe
};
const PaletteConstFWD<sizeof(colors_mat_cool) / sizeof(unsigned int)> palette_mat_cool(colors_mat_cool);
const PaletteConstBWD<sizeof(colors_mat_cool) / sizeof(unsigned int)> palette_mat_cool_inv(colors_mat_cool);
typedef PaletteConstFWD<sizeof(colors_mat_cool) / sizeof(unsigned int)> palette_mat_cool_t;
#endif // _MAT_COOL_H