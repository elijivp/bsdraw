#ifndef _MAT_COPPER_H
#define _MAT_COPPER_H
#include "../bstexpalette.h"
const unsigned int colors_mat_copper[] = {
                                          0x00020006, 0x00030007, 0x00030008, 0x00040009, 0x0004000b, 0x0005010c, 0x0005020d, 0x0006030f, 
                                          0x00060410, 0x00070411, 0x00070512, 0x00080614, 0x00080715, 0x00090816, 0x00090817, 0x000a0919, 
                                          0x000a0a1a, 0x000b0b1b, 0x000b0b1c, 0x000c0c1e, 0x000c0d1f, 0x000d0e20, 0x000d0f22, 0x000e0f23, 
                                          0x000e1024, 0x000f1125, 0x000f1227, 0x00101328, 0x00101329, 0x0011142a, 0x0011152c, 0x0012162d, 
                                          0x0012172e, 0x0013172f, 0x00131831, 0x00141932, 0x00141a33, 0x00151a34, 0x00151b36, 0x00161c37, 
                                          0x00161d38, 0x00171e3a, 0x00171e3b, 0x00181f3c, 0x0018203d, 0x0019213f, 0x00192240, 0x001a2241, 
                                          0x001a2342, 0x001b2444, 0x001b2545, 0x001c2646, 0x001c2647, 0x001d2749, 0x001d284a, 0x001e294b, 
                                          0x001e294d, 0x001f2a4e, 0x001f2b4f, 0x00202c50, 0x00202d52, 0x00212d53, 0x00212e54, 0x00222f55, 
                                          0x00223057, 0x00233158, 0x00233159, 0x0024325a, 0x0024335c, 0x0025345d, 0x0026355e, 0x0026355f, 
                                          0x00273661, 0x00273762, 0x00283863, 0x00283965, 0x00293966, 0x00293a67, 0x002a3b68, 0x002a3c6a, 
                                          0x002b3c6b, 0x002b3d6c, 0x002c3e6d, 0x002c3f6f, 0x002d4070, 0x002d4071, 0x002e4172, 0x002e4274, 
                                          0x002f4375, 0x002f4476, 0x00304478, 0x00304579, 0x0031467a, 0x0031477b, 0x0032487d, 0x0032487e, 
                                          0x0033497f, 0x00334a80, 0x00344b82, 0x00344b83, 0x00354c84, 0x00354d85, 0x00364e87, 0x00364f88, 
                                          0x00374f89, 0x0037508b, 0x0038518c, 0x0038528d, 0x0039538e, 0x00395390, 0x003a5491, 0x003a5592, 
                                          0x003b5693, 0x003b5795, 0x003c5796, 0x003c5897, 0x003d5998, 0x003d5a9a, 0x003e5b9b, 0x003e5b9c, 
                                          0x003f5c9d, 0x003f5d9f, 0x00405ea0, 0x00405ea1, 0x00415fa3, 0x004160a4, 0x004261a5, 0x004262a6, 
                                          0x004362a8, 0x004363a9, 0x004464aa, 0x004465ab, 0x004566ad, 0x004566ae, 0x004667af, 0x004668b0, 
                                          0x004769b2, 0x00476ab3, 0x00486ab4, 0x00486bb6, 0x00496cb7, 0x00496db8, 0x004a6db9, 0x004a6ebb, 
                                          0x004b6fbc, 0x004b70bd, 0x004c71be, 0x004c71c0, 0x004d72c1, 0x004d73c2, 0x004e74c3, 0x004e75c5, 
                                          0x004f75c6, 0x004f76c7, 0x005077c8, 0x005078ca, 0x005179cb, 0x005179cc, 0x00527ace, 0x00527bcf, 
                                          0x00537cd0, 0x00537dd1, 0x00547dd3, 0x00547ed4, 0x00557fd5, 0x005580d6, 0x005680d8, 0x005681d9, 
                                          0x005782da, 0x005783db, 0x005884dd, 0x005884de, 0x005985df, 0x005986e1, 0x005a87e2, 0x005a88e3, 
                                          0x005b88e4, 0x005b89e6, 0x005c8ae7, 0x005c8be8, 0x005d8ce9, 0x005d8ceb, 0x005e8dec, 0x005e8eed, 
                                          0x005f8fee, 0x005f8ff0, 0x006090f1, 0x006091f2, 0x006192f3, 0x006193f5, 0x006293f6, 0x006294f7, 
                                          0x006395f9, 0x006396fa, 0x006497fb, 0x006497fc, 0x006598fe, 0x006599ff, 0x00669aff, 0x00669bff, 
                                          0x00679bff, 0x00679cff, 0x00689dff, 0x00689eff, 0x00699eff, 0x00699fff, 0x006aa0ff, 0x006aa1ff, 
                                          0x006ba2ff, 0x006ba2ff, 0x006ca3ff, 0x006ca4ff, 0x006da5ff, 0x006da6ff, 0x006ea6ff, 0x006fa7ff, 
                                          0x006fa8ff, 0x0070a9ff, 0x0070aaff, 0x0071aaff, 0x0071abff, 0x0072acff, 0x0072adff, 0x0073aeff, 
                                          0x0073aeff, 0x0074afff, 0x0074b0ff, 0x0075b1ff, 0x0075b1ff, 0x0076b2ff, 0x0076b3ff, 0x0077b4ff, 
                                          0x0077b5ff, 0x0078b5ff, 0x0078b6ff, 0x0079b7ff, 0x0079b8ff, 0x007ab9ff, 0x007ab9ff, 0x007bbaff, 
                                          0x007bbbff, 0x007cbcff, 0x007cbdff, 0x007dbdff, 0x007dbeff, 0x007ebfff, 0x007ec0ff, 0x007fc0ff, 
                                          0x007fc1ff, 0x0080c2ff, 0x0080c3ff, 0x0081c4ff, 0x0081c4ff, 0x0082c5ff, 0x0082c6ff, 0x0083c7ff
};
const PaletteConstFWD<sizeof(colors_mat_copper) / sizeof(unsigned int)> palette_mat_copper(colors_mat_copper);
const PaletteConstBWD<sizeof(colors_mat_copper) / sizeof(unsigned int)> palette_mat_copper_inv(colors_mat_copper);
typedef PaletteConstFWD<sizeof(colors_mat_copper) / sizeof(unsigned int)> palette_mat_copper_t;
#endif // _MAT_COPPER_H