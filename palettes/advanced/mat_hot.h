#ifndef _MAT_HOT_H
#define _MAT_HOT_H
#include "../bstexpalette.h"
const unsigned int colors_mat_hot[] = {
                                       0x00000001, 0x00000004, 0x00000007, 0x00000009, 0x0000000c, 0x0000000f, 0x00000011, 0x00000014, 
                                       0x00000017, 0x00000019, 0x0000001c, 0x0000001f, 0x00000021, 0x00000024, 0x00000027, 0x00000029, 
                                       0x0000002c, 0x0000002e, 0x00000031, 0x00000034, 0x00000036, 0x00000039, 0x0000003c, 0x0000003e, 
                                       0x00000041, 0x00000044, 0x00000046, 0x00000049, 0x0000004c, 0x0000004e, 0x00000051, 0x00000054, 
                                       0x00000056, 0x00000059, 0x0000005c, 0x0000005e, 0x00000061, 0x00000064, 0x00000066, 0x00000069, 
                                       0x0000006c, 0x0000006e, 0x00000071, 0x00000074, 0x00000076, 0x00000079, 0x0000007c, 0x0000007e, 
                                       0x00000081, 0x00000083, 0x00000086, 0x00000089, 0x0000008b, 0x0000008e, 0x00000091, 0x00000093, 
                                       0x00000096, 0x00000099, 0x0000009b, 0x0000009e, 0x000000a1, 0x000000a3, 0x000000a6, 0x000000a9, 
                                       0x000000ab, 0x000000ae, 0x000000b1, 0x000000b3, 0x000000b6, 0x000000b9, 0x000000bb, 0x000000be, 
                                       0x000000c1, 0x000000c3, 0x000000c6, 0x000000c9, 0x000000cb, 0x000000ce, 0x000000d1, 0x000000d3, 
                                       0x000000d6, 0x000000d8, 0x000000db, 0x000000de, 0x000000e0, 0x000000e3, 0x000000e6, 0x000000e8, 
                                       0x000000eb, 0x000000ee, 0x000000f0, 0x000000f3, 0x000000f6, 0x000000f8, 0x000000fb, 0x000000fe, 
                                       0x000001ff, 0x000004ff, 0x000007ff, 0x000009ff, 0x00000cff, 0x00000fff, 0x000011ff, 0x000014ff, 
                                       0x000017ff, 0x000019ff, 0x00001cff, 0x00001fff, 0x000021ff, 0x000024ff, 0x000027ff, 0x000029ff, 
                                       0x00002cff, 0x00002eff, 0x000031ff, 0x000034ff, 0x000036ff, 0x000039ff, 0x00003cff, 0x00003eff, 
                                       0x000041ff, 0x000044ff, 0x000046ff, 0x000049ff, 0x00004cff, 0x00004eff, 0x000051ff, 0x000054ff, 
                                       0x000056ff, 0x000059ff, 0x00005cff, 0x00005eff, 0x000061ff, 0x000064ff, 0x000066ff, 0x000069ff, 
                                       0x00006cff, 0x00006eff, 0x000071ff, 0x000074ff, 0x000076ff, 0x000079ff, 0x00007cff, 0x00007eff, 
                                       0x000081ff, 0x000083ff, 0x000086ff, 0x000089ff, 0x00008bff, 0x00008eff, 0x000091ff, 0x000093ff, 
                                       0x000096ff, 0x000099ff, 0x00009bff, 0x00009eff, 0x0000a1ff, 0x0000a3ff, 0x0000a6ff, 0x0000a9ff, 
                                       0x0000abff, 0x0000aeff, 0x0000b1ff, 0x0000b3ff, 0x0000b6ff, 0x0000b9ff, 0x0000bbff, 0x0000beff, 
                                       0x0000c1ff, 0x0000c3ff, 0x0000c6ff, 0x0000c9ff, 0x0000cbff, 0x0000ceff, 0x0000d1ff, 0x0000d3ff, 
                                       0x0000d6ff, 0x0000d8ff, 0x0000dbff, 0x0000deff, 0x0000e0ff, 0x0000e3ff, 0x0000e6ff, 0x0000e8ff, 
                                       0x0000ebff, 0x0000eeff, 0x0000f0ff, 0x0000f3ff, 0x0000f6ff, 0x0000f8ff, 0x0000fbff, 0x0000feff, 
                                       0x0002ffff, 0x0006ffff, 0x000affff, 0x000effff, 0x0012ffff, 0x0016ffff, 0x001affff, 0x001effff, 
                                       0x0022ffff, 0x0026ffff, 0x002affff, 0x002effff, 0x0032ffff, 0x0036ffff, 0x003affff, 0x003effff, 
                                       0x0042ffff, 0x0046ffff, 0x004affff, 0x004effff, 0x0052ffff, 0x0056ffff, 0x005affff, 0x005effff, 
                                       0x0062ffff, 0x0066ffff, 0x006affff, 0x006effff, 0x0072ffff, 0x0076ffff, 0x007affff, 0x007effff, 
                                       0x0081ffff, 0x0085ffff, 0x0089ffff, 0x008dffff, 0x0091ffff, 0x0095ffff, 0x0099ffff, 0x009dffff, 
                                       0x00a1ffff, 0x00a5ffff, 0x00a9ffff, 0x00adffff, 0x00b1ffff, 0x00b5ffff, 0x00b9ffff, 0x00bdffff, 
                                       0x00c1ffff, 0x00c5ffff, 0x00c9ffff, 0x00cdffff, 0x00d1ffff, 0x00d5ffff, 0x00d9ffff, 0x00ddffff, 
                                       0x00e1ffff, 0x00e5ffff, 0x00e9ffff, 0x00edffff, 0x00f1ffff, 0x00f5ffff, 0x00f9ffff, 0x00fdffff
};
const PaletteConstFWD<sizeof(colors_mat_hot) / sizeof(unsigned int)> palette_mat_hot(colors_mat_hot);
const PaletteConstBWD<sizeof(colors_mat_hot) / sizeof(unsigned int)> palette_mat_hot_inv(colors_mat_hot);
typedef PaletteConstFWD<sizeof(colors_mat_hot) / sizeof(unsigned int)> palette_mat_hot_t;
#endif // _MAT_HOT_H