#ifndef _MAT_SPRING_H
#define _MAT_SPRING_H

#include "../bsipalette.h"

const unsigned int colors_mat_spring[] = {
                                          0x00ff00ff, 0x00fe01ff, 0x00fd02ff, 0x00fc03ff, 0x00fb04ff, 0x00fa05ff, 0x00f906ff, 0x00f807ff, 
                                          0x00f708ff, 0x00f609ff, 0x00f50aff, 0x00f40bff, 0x00f30cff, 0x00f20dff, 0x00f10eff, 0x00f00fff, 
                                          0x00ef10ff, 0x00ee11ff, 0x00ed12ff, 0x00ec13ff, 0x00eb14ff, 0x00ea15ff, 0x00e916ff, 0x00e817ff, 
                                          0x00e718ff, 0x00e619ff, 0x00e51aff, 0x00e41bff, 0x00e31cff, 0x00e21dff, 0x00e11eff, 0x00e01fff, 
                                          0x00df20ff, 0x00de21ff, 0x00dd22ff, 0x00dc23ff, 0x00db24ff, 0x00da25ff, 0x00d926ff, 0x00d827ff, 
                                          0x00d728ff, 0x00d629ff, 0x00d52aff, 0x00d42bff, 0x00d32cff, 0x00d22dff, 0x00d12eff, 0x00d02fff, 
                                          0x00cf30ff, 0x00ce31ff, 0x00cd32ff, 0x00cc33ff, 0x00cb34ff, 0x00ca35ff, 0x00c936ff, 0x00c837ff, 
                                          0x00c738ff, 0x00c639ff, 0x00c53aff, 0x00c43bff, 0x00c33cff, 0x00c23dff, 0x00c13eff, 0x00c03fff, 
                                          0x00bf40ff, 0x00be41ff, 0x00bd42ff, 0x00bc43ff, 0x00bb44ff, 0x00ba45ff, 0x00b946ff, 0x00b847ff, 
                                          0x00b748ff, 0x00b649ff, 0x00b54aff, 0x00b44bff, 0x00b34cff, 0x00b24dff, 0x00b14eff, 0x00b04fff, 
                                          0x00af50ff, 0x00ae51ff, 0x00ad52ff, 0x00ac53ff, 0x00ab54ff, 0x00aa55ff, 0x00a956ff, 0x00a857ff, 
                                          0x00a758ff, 0x00a659ff, 0x00a55aff, 0x00a45bff, 0x00a35cff, 0x00a25dff, 0x00a15eff, 0x00a05fff, 
                                          0x009f60ff, 0x009e61ff, 0x009d62ff, 0x009c63ff, 0x009b64ff, 0x009a65ff, 0x009966ff, 0x009867ff, 
                                          0x009768ff, 0x009669ff, 0x00956aff, 0x00946bff, 0x00936cff, 0x00926dff, 0x00916eff, 0x00906fff, 
                                          0x008f70ff, 0x008e71ff, 0x008d72ff, 0x008c73ff, 0x008b74ff, 0x008a75ff, 0x008976ff, 0x008877ff, 
                                          0x008778ff, 0x008679ff, 0x00857aff, 0x00847bff, 0x00837cff, 0x00827dff, 0x00817eff, 0x00807fff, 
                                          0x007f80ff, 0x007e81ff, 0x007d82ff, 0x007c83ff, 0x007b84ff, 0x007a85ff, 0x007986ff, 0x007887ff, 
                                          0x007788ff, 0x007689ff, 0x00758aff, 0x00748bff, 0x00738cff, 0x00728dff, 0x00718eff, 0x00708fff, 
                                          0x006f90ff, 0x006e91ff, 0x006d92ff, 0x006c93ff, 0x006b94ff, 0x006a95ff, 0x006996ff, 0x006897ff, 
                                          0x006798ff, 0x006699ff, 0x00659aff, 0x00649bff, 0x00639cff, 0x00629dff, 0x00619eff, 0x00609fff, 
                                          0x005fa0ff, 0x005ea1ff, 0x005da2ff, 0x005ca3ff, 0x005ba4ff, 0x005aa5ff, 0x0059a6ff, 0x0058a7ff, 
                                          0x0057a8ff, 0x0056a9ff, 0x0055aaff, 0x0054abff, 0x0053acff, 0x0052adff, 0x0051aeff, 0x0050afff, 
                                          0x004fb0ff, 0x004eb1ff, 0x004db2ff, 0x004cb3ff, 0x004bb4ff, 0x004ab5ff, 0x0049b6ff, 0x0048b7ff, 
                                          0x0047b8ff, 0x0046b9ff, 0x0045baff, 0x0044bbff, 0x0043bcff, 0x0042bdff, 0x0041beff, 0x0040bfff, 
                                          0x003fc0ff, 0x003ec1ff, 0x003dc2ff, 0x003cc3ff, 0x003bc4ff, 0x003ac5ff, 0x0039c6ff, 0x0038c7ff, 
                                          0x0037c8ff, 0x0036c9ff, 0x0035caff, 0x0034cbff, 0x0033ccff, 0x0032cdff, 0x0031ceff, 0x0030cfff, 
                                          0x002fd0ff, 0x002ed1ff, 0x002dd2ff, 0x002cd3ff, 0x002bd4ff, 0x002ad5ff, 0x0029d6ff, 0x0028d7ff, 
                                          0x0027d8ff, 0x0026d9ff, 0x0025daff, 0x0024dbff, 0x0023dcff, 0x0022ddff, 0x0021deff, 0x0020dfff, 
                                          0x001fe0ff, 0x001ee1ff, 0x001de2ff, 0x001ce3ff, 0x001be4ff, 0x001ae5ff, 0x0019e6ff, 0x0018e7ff, 
                                          0x0017e8ff, 0x0016e9ff, 0x0015eaff, 0x0014ebff, 0x0013ecff, 0x0012edff, 0x0011eeff, 0x0010efff, 
                                          0x000ff0ff, 0x000ef1ff, 0x000df2ff, 0x000cf3ff, 0x000bf4ff, 0x000af5ff, 0x0009f6ff, 0x0008f7ff, 
                                          0x0007f8ff, 0x0006f9ff, 0x0005faff, 0x0004fbff, 0x0003fcff, 0x0002fdff, 0x0001feff, 0x0000ffff
};

const PaletteConstFWD<sizeof(colors_mat_spring) / sizeof(unsigned int)> palette_mat_spring(colors_mat_spring);
const PaletteConstBWD<sizeof(colors_mat_spring) / sizeof(unsigned int)> palette_mat_spring_inv(colors_mat_spring);

typedef PaletteConstFWD<sizeof(colors_mat_spring) / sizeof(unsigned int)> palette_mat_spring_t;

#endif // _MAT_SPRING_H