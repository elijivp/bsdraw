#ifndef _TFM_SPACE_H
#define _TFM_SPACE_H

#include "../bsipalette.h"

const unsigned int colors_tfm_space[] = {
                                         0x00010100, 0x00030300, 0x00040400, 0x00060600, 0x00080800, 0x000a0900, 0x000c0b00, 0x000d0c00, 
                                         0x000f0d00, 0x00110f00, 0x00131000, 0x00151100, 0x00161200, 0x00181300, 0x001a1400, 0x001c1500, 
                                         0x001e1600, 0x001f1700, 0x00211800, 0x00231900, 0x00251900, 0x00271a00, 0x00281b00, 0x002a1b00, 
                                         0x002c1c00, 0x002e1c00, 0x002f1c00, 0x00311d00, 0x00331d00, 0x00351d00, 0x00371d00, 0x00381d00, 
                                         0x003a1d00, 0x003c1d00, 0x003e1d00, 0x00401d00, 0x00411d00, 0x00431c00, 0x00441a00, 0x00451900, 
                                         0x00451800, 0x00461700, 0x00461500, 0x00471400, 0x00471300, 0x00471200, 0x00481000, 0x00480f00, 
                                         0x00490e00, 0x00490d00, 0x00490b00, 0x004a0a00, 0x004a0900, 0x004b0800, 0x004b0600, 0x004c0500, 
                                         0x004c0400, 0x004c0300, 0x004d0200, 0x004d0000, 0x004e0001, 0x004e0002, 0x004f0004, 0x004f0005, 
                                         0x004f0006, 0x00500008, 0x00500009, 0x0051000a, 0x0051000c, 0x0052000d, 0x0052000f, 0x00520010, 
                                         0x00530012, 0x00530013, 0x00540015, 0x00540017, 0x00550018, 0x0055001a, 0x0055001c, 0x0056001d, 
                                         0x0056001f, 0x00570021, 0x00570023, 0x00580024, 0x00580026, 0x00580028, 0x0059002a, 0x0059002c, 
                                         0x005a002e, 0x005a0030, 0x005b0032, 0x005b0034, 0x005b0036, 0x005c0038, 0x005c003a, 0x005d003c, 
                                         0x005f003f, 0x00600042, 0x00610045, 0x00630047, 0x0064004a, 0x0065004d, 0x00670050, 0x00680053, 
                                         0x00690056, 0x006b0059, 0x006c005c, 0x006d005f, 0x006f0062, 0x00700065, 0x00710068, 0x0073006c, 
                                         0x0074006f, 0x00750072, 0x00770075, 0x00770078, 0x00760079, 0x0075007b, 0x0074007c, 0x0073007d, 
                                         0x0072007f, 0x00710080, 0x00700081, 0x006e0083, 0x006d0084, 0x006c0085, 0x006a0087, 0x00690088, 
                                         0x00680089, 0x0066008a, 0x0064008c, 0x0063008d, 0x0061008e, 0x005f0090, 0x005e0091, 0x005c0092, 
                                         0x005a0094, 0x00580095, 0x00560096, 0x00540098, 0x00520099, 0x0050009a, 0x004e009c, 0x004b009d, 
                                         0x0049009e, 0x004700a0, 0x004500a1, 0x004200a2, 0x004000a4, 0x003d00a5, 0x003b00a6, 0x003800a8, 
                                         0x003600a9, 0x003300aa, 0x003000ac, 0x002d00ad, 0x002b00ae, 0x002800b0, 0x002500b1, 0x002200b2, 
                                         0x001f00b4, 0x001c00b5, 0x001900b6, 0x001500b8, 0x001200bc, 0x000f00c0, 0x000c00c5, 0x000800c9, 
                                         0x000500cd, 0x000200d1, 0x000003d5, 0x000009d9, 0x00000edd, 0x000013e2, 0x000019e6, 0x00001ee9, 
                                         0x000023ea, 0x000028ec, 0x00002eee, 0x000033ef, 0x000038f1, 0x00003df2, 0x000041f4, 0x000146f5, 
                                         0x00034bf7, 0x000450f8, 0x000654fa, 0x000759fc, 0x00095dfd, 0x000a62ff, 0x000c67ff, 0x000d6cff, 
                                         0x000f71ff, 0x001076ff, 0x00127bff, 0x00137fff, 0x001584ff, 0x001689ff, 0x00188dff, 0x001992ff, 
                                         0x001b97ff, 0x001c9bff, 0x001ea0ff, 0x001fa4ff, 0x0021a8ff, 0x0022adff, 0x0024b1ff, 0x0025b5ff, 
                                         0x0027b9ff, 0x0028bdff, 0x002ac1ff, 0x002bc5ff, 0x002dc9ff, 0x002ecdff, 0x0030d1ff, 0x0031d4ff, 
                                         0x0033d8ff, 0x0035dcff, 0x003bdfff, 0x0040e3ff, 0x0045e6ff, 0x004aeaff, 0x0050edff, 0x0055f0ff, 
                                         0x005af3ff, 0x005ff7ff, 0x0065faff, 0x006afdff, 0x006fffff, 0x0074ffff, 0x007affff, 0x007fffff, 
                                         0x0084ffff, 0x008affff, 0x008fffff, 0x0094ffff, 0x0099ffff, 0x009fffff, 0x00a4ffff, 0x00a9ffff, 
                                         0x00aeffff, 0x00b4ffff, 0x00b9ffff, 0x00beffff, 0x00c4ffff, 0x00c9ffff, 0x00ceffff, 0x00d3ffff, 
                                         0x00d9ffff, 0x00deffff, 0x00e3ffff, 0x00e8ffff, 0x00eeffff, 0x00f3ffff, 0x00f8ffff, 0x00fdffff
};

const PaletteConstFWD<sizeof(colors_tfm_space) / sizeof(unsigned int)> palette_tfm_space(colors_tfm_space);
const PaletteConstBWD<sizeof(colors_tfm_space) / sizeof(unsigned int)> palette_tfm_space_inv(colors_tfm_space);

typedef PaletteConstFWD<sizeof(colors_tfm_space) / sizeof(unsigned int)> palette_tfm_space_t;

#endif // _TFM_SPACE_H