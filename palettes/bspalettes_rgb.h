#ifndef PALETTES_RGB_H
#define PALETTES_RGB_H

/// 2 or 3 mesh colored palettes
/// for draws with more than 1 portions
/// Created By: Elijah Vlasov

#include "bsipalette.h"

const unsigned int colors_rgb_RGB[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
};
const PaletteConstFWD<sizeof(colors_rgb_RGB) / sizeof(unsigned int)>   paletteRGB(colors_rgb_RGB);
const PaletteConstBWD<sizeof(colors_rgb_RGB) / sizeof(unsigned int)>   paletteRGB_inv(colors_rgb_RGB);

const unsigned int colors_rgb_BGR[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_BGR) / sizeof(unsigned int)>   paletteBGR(colors_rgb_BGR);
const PaletteConstBWD<sizeof(colors_rgb_BGR) / sizeof(unsigned int)>   paletteBGR_inv(colors_rgb_BGR);

const unsigned int colors_rgb_RG[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
};

const PaletteConstFWD<sizeof(colors_rgb_RG) / sizeof(unsigned int)>   paletteRG(colors_rgb_RG);
const PaletteConstBWD<sizeof(colors_rgb_RG) / sizeof(unsigned int)>   paletteRG_inv(colors_rgb_RG);

const unsigned int colors_rgb_RB[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
};
const PaletteConstFWD<sizeof(colors_rgb_RB) / sizeof(unsigned int)>   paletteRB(colors_rgb_RB);
const PaletteConstBWD<sizeof(colors_rgb_RB) / sizeof(unsigned int)>   paletteRB_inv(colors_rgb_RB);

////////////////////

const unsigned int colors_rgb_YB[] = { 
  0x00000000,0x00000303,0x00000606,0x00000909,0x00000c0c,0x00000f0f,0x00001212,0x00001515,0x00001818,0x00001b1b,0x00001e1e,0x00002121,0x00002424,0x00002727,0x00002a2a,0x00002d2d,0x00003030,0x00003333,0x00003636,0x00003939,0x00003c3c,0x00003f3f,0x00004242,0x00004545,0x00004848,0x00004b4b,0x00004e4e,0x00005151,0x00005454,0x00005757,0x00005a5a,0x00005d5d,0x00006060,0x00006363,0x00006666,0x00006969,0x00006c6c,0x00006f6f,0x00007272,0x00007575,0x00007878,0x00007b7b,0x00007e7e,
  0x00008181,0x00008484,0x00008787,0x00008a8a,0x00008d8d,0x00009090,0x00009393,0x00009696,0x00009999,0x00009c9c,0x00009f9f,0x0000a2a2,0x0000a5a5,0x0000a8a8,0x0000abab,0x0000aeae,0x0000b1b1,0x0000b4b4,0x0000b7b7,0x0000baba,0x0000bdbd,0x0000c0c0,0x0000c3c3,0x0000c6c6,0x0000c9c9,0x0000cccc,0x0000cfcf,0x0000d2d2,0x0000d5d5,0x0000d8d8,0x0000dbdb,0x0000dede,0x0000e1e1,0x0000e4e4,0x0000e7e7,0x0000eaea,0x0000eded,0x0000f0f0,0x0000f3f3,0x0000f6f6,0x0000f9f9,0x0000fcfc,0x0000ffff,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_YB) / sizeof(unsigned int)>   paletteYB(colors_rgb_YB);
const PaletteConstBWD<sizeof(colors_rgb_YB) / sizeof(unsigned int)>   paletteYB_inv(colors_rgb_YB);

const unsigned int colors_rgb_BY[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000303,0x00000606,0x00000909,0x00000c0c,0x00000f0f,0x00001212,0x00001515,0x00001818,0x00001b1b,0x00001e1e,0x00002121,0x00002424,0x00002727,0x00002a2a,0x00002d2d,0x00003030,0x00003333,0x00003636,0x00003939,0x00003c3c,0x00003f3f,0x00004242,0x00004545,0x00004848,0x00004b4b,0x00004e4e,0x00005151,0x00005454,0x00005757,0x00005a5a,0x00005d5d,0x00006060,0x00006363,0x00006666,0x00006969,0x00006c6c,0x00006f6f,0x00007272,0x00007575,0x00007878,0x00007b7b,0x00007e7e,
  0x00008181,0x00008484,0x00008787,0x00008a8a,0x00008d8d,0x00009090,0x00009393,0x00009696,0x00009999,0x00009c9c,0x00009f9f,0x0000a2a2,0x0000a5a5,0x0000a8a8,0x0000abab,0x0000aeae,0x0000b1b1,0x0000b4b4,0x0000b7b7,0x0000baba,0x0000bdbd,0x0000c0c0,0x0000c3c3,0x0000c6c6,0x0000c9c9,0x0000cccc,0x0000cfcf,0x0000d2d2,0x0000d5d5,0x0000d8d8,0x0000dbdb,0x0000dede,0x0000e1e1,0x0000e4e4,0x0000e7e7,0x0000eaea,0x0000eded,0x0000f0f0,0x0000f3f3,0x0000f6f6,0x0000f9f9,0x0000fcfc,0x0000ffff
  };
const PaletteConstFWD<sizeof(colors_rgb_BY) / sizeof(unsigned int)>   paletteBY(colors_rgb_BY);
const PaletteConstBWD<sizeof(colors_rgb_BY) / sizeof(unsigned int)>   paletteBY_inv(colors_rgb_BY);

const unsigned int colors_rgb_GB[] = { 
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_GB) / sizeof(unsigned int)>   paletteGB(colors_rgb_GB);
const PaletteConstBWD<sizeof(colors_rgb_GB) / sizeof(unsigned int)>   paletteGB_inv(colors_rgb_GB);

const unsigned int colors_rgb_BG[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00
  };
const PaletteConstFWD<sizeof(colors_rgb_BG) / sizeof(unsigned int)>   paletteBG(colors_rgb_BG);
const PaletteConstBWD<sizeof(colors_rgb_BG) / sizeof(unsigned int)>   paletteBG_inv(colors_rgb_BG);

const unsigned int colors_rgb_GR[] = { 
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_GR) / sizeof(unsigned int)>   paletteGR(colors_rgb_GR);
const PaletteConstBWD<sizeof(colors_rgb_GR) / sizeof(unsigned int)>   paletteGR_inv(colors_rgb_GR);

const unsigned int colors_rgb_BgR[] = { 
  0x00ff0000,0x00ff0300,0x00ff0600,0x00ff0900,0x00ff0c00,0x00ff0f00,0x00ff1200,0x00ff1500,0x00ff1800,0x00ff1b00,0x00ff1e00,0x00ff2100,0x00ff2400,0x00ff2700,0x00ff2a00,0x00ff2d00,0x00ff3000,0x00ff3300,0x00ff3600,0x00ff3900,0x00ff3c00,0x00ff3f00,0x00ff4200,0x00ff4500,0x00ff4800,0x00ff4b00,0x00ff4e00,0x00ff5100,0x00ff5400,0x00ff5700,0x00ff5a00,0x00ff5d00,0x00ff6000,0x00ff6300,0x00ff6600,0x00ff6900,0x00ff6c00,0x00ff6f00,0x00ff7200,0x00ff7500,0x00ff7800,0x00ff7b00,0x00ff7e00,
  0x00ff8100,0x00ff8400,0x00ff8700,0x00ff8a00,0x00ff8d00,0x00ff9000,0x00ff9300,0x00ff9600,0x00ff9900,0x00ff9c00,0x00ff9f00,0x00ffa200,0x00ffa500,0x00ffa800,0x00ffab00,0x00ffae00,0x00ffb100,0x00ffb400,0x00ffb700,0x00ffba00,0x00ffbd00,0x00ffc000,0x00ffc300,0x00ffc600,0x00ffc900,0x00ffcc00,0x00ffcf00,0x00ffd200,0x00ffd500,0x00ffd800,0x00ffdb00,0x00ffde00,0x00ffe100,0x00ffe400,0x00ffe700,0x00ffea00,0x00ffed00,0x00fff000,0x00fff300,0x00fff600,0x00fff900,0x00fffc00,0x00ffff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_BgR) / sizeof(unsigned int)>   paletteBgR(colors_rgb_BgR);
const PaletteConstBWD<sizeof(colors_rgb_BgR) / sizeof(unsigned int)>   paletteBgR_inv(colors_rgb_BgR);

const unsigned int colors_rgb_RBg[] = { 
  0x00ff0000,0x00ff0300,0x00ff0600,0x00ff0900,0x00ff0c00,0x00ff0f00,0x00ff1200,0x00ff1500,0x00ff1800,0x00ff1b00,0x00ff1e00,0x00ff2100,0x00ff2400,0x00ff2700,0x00ff2a00,0x00ff2d00,0x00ff3000,0x00ff3300,0x00ff3600,0x00ff3900,0x00ff3c00,0x00ff3f00,0x00ff4200,0x00ff4500,0x00ff4800,0x00ff4b00,0x00ff4e00,0x00ff5100,0x00ff5400,0x00ff5700,0x00ff5a00,0x00ff5d00,0x00ff6000,0x00ff6300,0x00ff6600,0x00ff6900,0x00ff6c00,0x00ff6f00,0x00ff7200,0x00ff7500,0x00ff7800,0x00ff7b00,0x00ff7e00,
  0x00ff8100,0x00ff8400,0x00ff8700,0x00ff8a00,0x00ff8d00,0x00ff9000,0x00ff9300,0x00ff9600,0x00ff9900,0x00ff9c00,0x00ff9f00,0x00ffa200,0x00ffa500,0x00ffa800,0x00ffab00,0x00ffae00,0x00ffb100,0x00ffb400,0x00ffb700,0x00ffba00,0x00ffbd00,0x00ffc000,0x00ffc300,0x00ffc600,0x00ffc900,0x00ffcc00,0x00ffcf00,0x00ffd200,0x00ffd500,0x00ffd800,0x00ffdb00,0x00ffde00,0x00ffe100,0x00ffe400,0x00ffe700,0x00ffea00,0x00ffed00,0x00fff000,0x00fff300,0x00fff600,0x00fff900,0x00fffc00,0x00ffff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_RBg) / sizeof(unsigned int)>   paletteRBg(colors_rgb_RBg);
const PaletteConstBWD<sizeof(colors_rgb_RBg) / sizeof(unsigned int)>   paletteRBg_inv(colors_rgb_RBg);

const unsigned int colors_rgb_Gr2B[] = { 
  0x0000007d,0x0000037d,0x0000067d,0x0000097d,0x00000c7d,0x00000f7d,0x0000127d,0x0000157d,0x0000187d,0x00001b7d,0x00001e7d,0x0000217d,0x0000247d,0x0000277d,0x00002a7d,0x00002d7d,0x0000307d,0x0000337d,0x0000367d,0x0000397d,0x00003c7d,0x00003f7d,0x0000427d,0x0000457d,0x0000487d,0x00004b7d,0x00004e7d,0x0000517d,0x0000547d,0x0000577d,0x00005a7d,0x00005d7d,0x0000607d,0x0000637d,0x0000667d,0x0000697d,0x00006c7d,0x00006f7d,0x0000727d,0x0000757d,0x0000787d,0x00007b7d,0x00007e7d,
  0x0000817d,0x0000847d,0x0000877d,0x00008a7d,0x00008d7d,0x0000907d,0x0000937d,0x0000967d,0x0000997d,0x00009c7d,0x00009f7d,0x0000a27d,0x0000a57d,0x0000a87d,0x0000ab7d,0x0000ae7d,0x0000b17d,0x0000b47d,0x0000b77d,0x0000ba7d,0x0000bd7d,0x0000c07d,0x0000c37d,0x0000c67d,0x0000c97d,0x0000cc7d,0x0000cf7d,0x0000d27d,0x0000d57d,0x0000d87d,0x0000db7d,0x0000de7d,0x0000e17d,0x0000e47d,0x0000e77d,0x0000ea7d,0x0000ed7d,0x0000f07d,0x0000f37d,0x0000f67d,0x0000f97d,0x0000fc7d,0x0000ff7d,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_Gr2B) / sizeof(unsigned int)>   paletteGr2B(colors_rgb_Gr2B);
const PaletteConstBWD<sizeof(colors_rgb_Gr2B) / sizeof(unsigned int)>   paletteGr2B_inv(colors_rgb_Gr2B);

const unsigned int colors_rgb_BGr2[] = { 
  0x0000007d,0x0000037d,0x0000067d,0x0000097d,0x00000c7d,0x00000f7d,0x0000127d,0x0000157d,0x0000187d,0x00001b7d,0x00001e7d,0x0000217d,0x0000247d,0x0000277d,0x00002a7d,0x00002d7d,0x0000307d,0x0000337d,0x0000367d,0x0000397d,0x00003c7d,0x00003f7d,0x0000427d,0x0000457d,0x0000487d,0x00004b7d,0x00004e7d,0x0000517d,0x0000547d,0x0000577d,0x00005a7d,0x00005d7d,0x0000607d,0x0000637d,0x0000667d,0x0000697d,0x00006c7d,0x00006f7d,0x0000727d,0x0000757d,0x0000787d,0x00007b7d,0x00007e7d,
  0x0000817d,0x0000847d,0x0000877d,0x00008a7d,0x00008d7d,0x0000907d,0x0000937d,0x0000967d,0x0000997d,0x00009c7d,0x00009f7d,0x0000a27d,0x0000a57d,0x0000a87d,0x0000ab7d,0x0000ae7d,0x0000b17d,0x0000b47d,0x0000b77d,0x0000ba7d,0x0000bd7d,0x0000c07d,0x0000c37d,0x0000c67d,0x0000c97d,0x0000cc7d,0x0000cf7d,0x0000d27d,0x0000d57d,0x0000d87d,0x0000db7d,0x0000de7d,0x0000e17d,0x0000e47d,0x0000e77d,0x0000ea7d,0x0000ed7d,0x0000f07d,0x0000f37d,0x0000f67d,0x0000f97d,0x0000fc7d,0x0000ff7d,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_BGr2) / sizeof(unsigned int)>   paletteBGr2(colors_rgb_BGr2);
const PaletteConstBWD<sizeof(colors_rgb_BGr2) / sizeof(unsigned int)>   paletteBGr2_inv(colors_rgb_BGr2);

const unsigned int colors_rgb_Gb2R[] = { 
  0x007d0000,0x007d0300,0x007d0600,0x007d0900,0x007d0c00,0x007d0f00,0x007d1200,0x007d1500,0x007d1800,0x007d1b00,0x007d1e00,0x007d2100,0x007d2400,0x007d2700,0x007d2a00,0x007d2d00,0x007d3000,0x007d3300,0x007d3600,0x007d3900,0x007d3c00,0x007d3f00,0x007d4200,0x007d4500,0x007d4800,0x007d4b00,0x007d4e00,0x007d5100,0x007d5400,0x007d5700,0x007d5a00,0x007d5d00,0x007d6000,0x007d6300,0x007d6600,0x007d6900,0x007d6c00,0x007d6f00,0x007d7200,0x007d7500,0x007d7800,0x007d7b00,0x007d7e00,
  0x007d8100,0x007d8400,0x007d8700,0x007d8a00,0x007d8d00,0x007d9000,0x007d9300,0x007d9600,0x007d9900,0x007d9c00,0x007d9f00,0x007da200,0x007da500,0x007da800,0x007dab00,0x007dae00,0x007db100,0x007db400,0x007db700,0x007dba00,0x007dbd00,0x007dc000,0x007dc300,0x007dc600,0x007dc900,0x007dcc00,0x007dcf00,0x007dd200,0x007dd500,0x007dd800,0x007ddb00,0x007dde00,0x007de100,0x007de400,0x007de700,0x007dea00,0x007ded00,0x007df000,0x007df300,0x007df600,0x007df900,0x007dfc00,0x007dff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_Gb2R) / sizeof(unsigned int)>   paletteGb2R(colors_rgb_Gb2R);
const PaletteConstBWD<sizeof(colors_rgb_Gb2R) / sizeof(unsigned int)>   paletteGb2R_inv(colors_rgb_Gb2R);

const unsigned int colors_rgb_RGb2[] = { 
  0x007d0000,0x007d0300,0x007d0600,0x007d0900,0x007d0c00,0x007d0f00,0x007d1200,0x007d1500,0x007d1800,0x007d1b00,0x007d1e00,0x007d2100,0x007d2400,0x007d2700,0x007d2a00,0x007d2d00,0x007d3000,0x007d3300,0x007d3600,0x007d3900,0x007d3c00,0x007d3f00,0x007d4200,0x007d4500,0x007d4800,0x007d4b00,0x007d4e00,0x007d5100,0x007d5400,0x007d5700,0x007d5a00,0x007d5d00,0x007d6000,0x007d6300,0x007d6600,0x007d6900,0x007d6c00,0x007d6f00,0x007d7200,0x007d7500,0x007d7800,0x007d7b00,0x007d7e00,
  0x007d8100,0x007d8400,0x007d8700,0x007d8a00,0x007d8d00,0x007d9000,0x007d9300,0x007d9600,0x007d9900,0x007d9c00,0x007d9f00,0x007da200,0x007da500,0x007da800,0x007dab00,0x007dae00,0x007db100,0x007db400,0x007db700,0x007dba00,0x007dbd00,0x007dc000,0x007dc300,0x007dc600,0x007dc900,0x007dcc00,0x007dcf00,0x007dd200,0x007dd500,0x007dd800,0x007ddb00,0x007dde00,0x007de100,0x007de400,0x007de700,0x007dea00,0x007ded00,0x007df000,0x007df300,0x007df600,0x007df900,0x007dfc00,0x007dff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_RGb2) / sizeof(unsigned int)>   paletteRGb2(colors_rgb_RGb2);
const PaletteConstBWD<sizeof(colors_rgb_RGb2) / sizeof(unsigned int)>   paletteRGb2_inv(colors_rgb_RGb2);

const unsigned int colors_rgb_Gb4R[] = { 
  0x00400000,0x00400300,0x00400600,0x00400900,0x00400c00,0x00400f00,0x00401200,0x00401500,0x00401800,0x00401b00,0x00401e00,0x00402100,0x00402400,0x00402700,0x00402a00,0x00402d00,0x00403000,0x00403300,0x00403600,0x00403900,0x00403c00,0x00403f00,0x00404200,0x00404500,0x00404800,0x00404b00,0x00404e00,0x00405100,0x00405400,0x00405700,0x00405a00,0x00405d00,0x00406000,0x00406300,0x00406600,0x00406900,0x00406c00,0x00406f00,0x00407200,0x00407500,0x00407800,0x00407b00,0x00407e00,
  0x00408100,0x00408400,0x00408700,0x00408a00,0x00408d00,0x00409000,0x00409300,0x00409600,0x00409900,0x00409c00,0x00409f00,0x0040a200,0x0040a500,0x0040a800,0x0040ab00,0x0040ae00,0x0040b100,0x0040b400,0x0040b700,0x0040ba00,0x0040bd00,0x0040c000,0x0040c300,0x0040c600,0x0040c900,0x0040cc00,0x0040cf00,0x0040d200,0x0040d500,0x0040d800,0x0040db00,0x0040de00,0x0040e100,0x0040e400,0x0040e700,0x0040ea00,0x0040ed00,0x0040f000,0x0040f300,0x0040f600,0x0040f900,0x0040fc00,0x0040ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_Gb4R) / sizeof(unsigned int)>   paletteGb4R(colors_rgb_Gb4R);
const PaletteConstBWD<sizeof(colors_rgb_Gb4R) / sizeof(unsigned int)>   paletteGb4R_inv(colors_rgb_Gb4R);

const unsigned int colors_rgb_RGb4[] = { 
  0x00400000,0x00400300,0x00400600,0x00400900,0x00400c00,0x00400f00,0x00401200,0x00401500,0x00401800,0x00401b00,0x00401e00,0x00402100,0x00402400,0x00402700,0x00402a00,0x00402d00,0x00403000,0x00403300,0x00403600,0x00403900,0x00403c00,0x00403f00,0x00404200,0x00404500,0x00404800,0x00404b00,0x00404e00,0x00405100,0x00405400,0x00405700,0x00405a00,0x00405d00,0x00406000,0x00406300,0x00406600,0x00406900,0x00406c00,0x00406f00,0x00407200,0x00407500,0x00407800,0x00407b00,0x00407e00,
  0x00408100,0x00408400,0x00408700,0x00408a00,0x00408d00,0x00409000,0x00409300,0x00409600,0x00409900,0x00409c00,0x00409f00,0x0040a200,0x0040a500,0x0040a800,0x0040ab00,0x0040ae00,0x0040b100,0x0040b400,0x0040b700,0x0040ba00,0x0040bd00,0x0040c000,0x0040c300,0x0040c600,0x0040c900,0x0040cc00,0x0040cf00,0x0040d200,0x0040d500,0x0040d800,0x0040db00,0x0040de00,0x0040e100,0x0040e400,0x0040e700,0x0040ea00,0x0040ed00,0x0040f000,0x0040f300,0x0040f600,0x0040f900,0x0040fc00,0x0040ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_RGb4) / sizeof(unsigned int)>   paletteRGb4(colors_rgb_RGb4);
const PaletteConstBWD<sizeof(colors_rgb_RGb4) / sizeof(unsigned int)>   paletteRGb4_inv(colors_rgb_RGb4);

///////////////////////////////////////// SEMAPHORES  /////////////////////////////////////////////////////////////

const unsigned int colors_rgb_SemaphoreRYGgrad [] = { 
  0x00000000,0x00001900,0x00003300,0x00004c00,0x00006600,0x00007f00,0x00009900,0x0000b200,0x0000cc00,0x0000e500,
  0x0000ff00,0x00000000,0x00001919,0x00003333,0x00004c4c,0x00006666,0x00007f7f,0x00009999,0x0000b2b2,0x0000cccc,
  0x0000e5e5,0x0000ffff,0x00000000,0x00000019,0x00000033,0x0000004c,0x00000066,0x0000007f,0x00000099,0x000000b2,
  0x000000cc,0x000000e5,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRYGgrad) / sizeof(unsigned int)>   paletteSemaphoreRYGgrad(colors_rgb_SemaphoreRYGgrad);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRYGgrad) / sizeof(unsigned int)>   paletteSemaphoreRYGgrad_inv(colors_rgb_SemaphoreRYGgrad);

const unsigned int colors_rgb_SemaphoreRYG [] = { 
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x000000ff,0x000000ff,0x000000ff,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRYG) / sizeof(unsigned int)>   paletteSemaphoreRYG(colors_rgb_SemaphoreRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRYG) / sizeof(unsigned int)>   paletteSemaphoreRYG_inv(colors_rgb_SemaphoreRYG);

const unsigned int colors_rgb_SemaphoreRG [] = { 
  0x000000ff,0x000000ff,0x000000ff,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRG) / sizeof(unsigned int)>   paletteSemaphoreRG(colors_rgb_SemaphoreRG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRG) / sizeof(unsigned int)>   paletteSemaphoreRG_inv(colors_rgb_SemaphoreRG);


const unsigned int colors_rgb_SemaphoreGRYG [] = { 
  0x00999999,0x00999999,0x00999999,0x00999999,0x00999999,0x00999999,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreGRYG) / sizeof(unsigned int)>   paletteSemaphoreGRYG(colors_rgb_SemaphoreGRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreGRYG) / sizeof(unsigned int)>   paletteSemaphoreGRYG_inv(colors_rgb_SemaphoreGRYG);

const unsigned int colors_rgb_SemaphoreGRYGsimple [] = { 
  0x00999999,0x000000ff,0x0000ffff,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreGRYGsimple) / sizeof(unsigned int)>   paletteSemaphoreGRYGsimple(colors_rgb_SemaphoreGRYGsimple);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreGRYGsimple) / sizeof(unsigned int)>   paletteSemaphoreGRYGsimple_inv(colors_rgb_SemaphoreGRYGsimple);

const unsigned int colors_rgb_SemaphoreBRYG [] = { 
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreBRYG) / sizeof(unsigned int)>   paletteSemaphoreBRYG(colors_rgb_SemaphoreBRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreBRYG) / sizeof(unsigned int)>   paletteSemaphoreBRYG_inv(colors_rgb_SemaphoreBRYG);

const unsigned int colors_rgb_SemaphoreWRYG [] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreWRYG) / sizeof(unsigned int)>   paletteSemaphoreWRYG(colors_rgb_SemaphoreWRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreWRYG) / sizeof(unsigned int)>   paletteSemaphoreWRYG_inv(colors_rgb_SemaphoreWRYG);


const unsigned int colors_rgb_SemaphoreWRYGgrad [] = { 
  0x00000000,0x000b0b0b,0x00161616,0x00212121,0x002c2c2c,0x00373737,0x00424242,0x004d4d4d,0x00585858,0x00636363,
  0x006e6e6e,0x00797979,0x00858585,0x00909090,0x009b9b9b,0x00a6a6a6,0x00b1b1b1,0x00bcbcbc,0x00c7c7c7,0x00d2d2d2,
  0x00dddddd,0x00e8e8e8,0x00f3f3f3,0x00ffffff,0x000000ff,0x000b0bff,0x001616ff,0x002121ff,0x002c2cff,0x003737ff,
  0x004242ff,0x004d4dff,0x005858ff,0x006363ff,0x006e6eff,0x007979ff,0x008585ff,0x009090ff,0x009b9bff,0x00a6a6ff,
  0x00b1b1ff,0x00bcbcff,0x00c7c7ff,0x00d2d2ff,0x00ddddff,0x00e8e8ff,0x00f3f3ff,0x00ffffff,0x0000ffff,0x000bffff,
  0x0016ffff,0x0021ffff,0x002cffff,0x0037ffff,0x0042ffff,0x004dffff,0x0058ffff,0x0063ffff,0x006effff,0x0079ffff,
  0x0085ffff,0x0090ffff,0x009bffff,0x00a6ffff,0x00b1ffff,0x00bcffff,0x00c7ffff,0x00d2ffff,0x00ddffff,0x00e8ffff,
  0x00f3ffff,0x00ffffff,0x0000ff00,0x000bff0b,0x0016ff16,0x0021ff21,0x002cff2c,0x0037ff37,0x0042ff42,0x004dff4d,
  0x0058ff58,0x0063ff63,0x006eff6e,0x0079ff79,0x0085ff85,0x0090ff90,0x009bff9b,0x00a6ffa6,0x00b1ffb1,0x00bcffbc,
  0x00c7ffc7,0x00d2ffd2,0x00ddffdd,0x00e8ffe8,0x00f3fff3,0x00ffffff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreWRYGgrad) / sizeof(unsigned int)>   paletteSemaphoreWRYGgrad(colors_rgb_SemaphoreWRYGgrad);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreWRYGgrad) / sizeof(unsigned int)>   paletteSemaphoreWRYGgrad_inv(colors_rgb_SemaphoreWRYGgrad);

#endif // PALETTES_RGB_H

