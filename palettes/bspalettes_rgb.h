#ifndef PALETTES_RGB_H
#define PALETTES_RGB_H

/// 2 or 3 mesh colored palettes
/// for draws with more than 1 portions
/// Created By: Elijah Vlasov

#include "bsipalette.h"

const unsigned int colors_rgb_RGB[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
};
const PaletteConstFWD<sizeof(colors_rgb_RGB) / sizeof(unsigned int), true>   paletteRGB(colors_rgb_RGB);
const PaletteConstBWD<sizeof(colors_rgb_RGB) / sizeof(unsigned int), true>   paletteRGB_inv(colors_rgb_RGB);

const unsigned int colors_rgb_BGR[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_BGR) / sizeof(unsigned int), true>   paletteBGR(colors_rgb_BGR);
const PaletteConstBWD<sizeof(colors_rgb_BGR) / sizeof(unsigned int), true>   paletteBGR_inv(colors_rgb_BGR);

const unsigned int colors_rgb_RG[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
};

const PaletteConstFWD<sizeof(colors_rgb_RG) / sizeof(unsigned int), true>   paletteRG(colors_rgb_RG);
const PaletteConstBWD<sizeof(colors_rgb_RG) / sizeof(unsigned int), true>   paletteRG_inv(colors_rgb_RG);

const unsigned int colors_rgb_GR[] = { 
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_GR) / sizeof(unsigned int), true>   paletteGR(colors_rgb_GR);
const PaletteConstBWD<sizeof(colors_rgb_GR) / sizeof(unsigned int), true>   paletteGR_inv(colors_rgb_GR);

////////////////////

const unsigned int colors_rgb_RB[] = { 
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_RB) / sizeof(unsigned int), true>   paletteRB(colors_rgb_RB);
const PaletteConstBWD<sizeof(colors_rgb_RB) / sizeof(unsigned int), true>   paletteRB_inv(colors_rgb_RB);

const unsigned int colors_rgb_BR[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000003,0x00000006,0x00000009,0x0000000c,0x0000000f,0x00000012,0x00000015,0x00000018,0x0000001b,0x0000001e,0x00000021,0x00000024,0x00000027,0x0000002a,0x0000002d,0x00000030,0x00000033,0x00000036,0x00000039,0x0000003c,0x0000003f,0x00000042,0x00000045,0x00000048,0x0000004b,0x0000004e,0x00000051,0x00000054,0x00000057,0x0000005a,0x0000005d,0x00000060,0x00000063,0x00000066,0x00000069,0x0000006c,0x0000006f,0x00000072,0x00000075,0x00000078,0x0000007b,0x0000007e,
  0x00000081,0x00000084,0x00000087,0x0000008a,0x0000008d,0x00000090,0x00000093,0x00000096,0x00000099,0x0000009c,0x0000009f,0x000000a2,0x000000a5,0x000000a8,0x000000ab,0x000000ae,0x000000b1,0x000000b4,0x000000b7,0x000000ba,0x000000bd,0x000000c0,0x000000c3,0x000000c6,0x000000c9,0x000000cc,0x000000cf,0x000000d2,0x000000d5,0x000000d8,0x000000db,0x000000de,0x000000e1,0x000000e4,0x000000e7,0x000000ea,0x000000ed,0x000000f0,0x000000f3,0x000000f6,0x000000f9,0x000000fc,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_BR) / sizeof(unsigned int), true>   paletteBR(colors_rgb_BR);
const PaletteConstBWD<sizeof(colors_rgb_BR) / sizeof(unsigned int), true>   paletteBR_inv(colors_rgb_BR);

////////////////////

const unsigned int colors_rgb_GB[] = { 
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_GB) / sizeof(unsigned int), true>   paletteGB(colors_rgb_GB);
const PaletteConstBWD<sizeof(colors_rgb_GB) / sizeof(unsigned int), true>   paletteGB_inv(colors_rgb_GB);

const unsigned int colors_rgb_BG[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000300,0x00000600,0x00000900,0x00000c00,0x00000f00,0x00001200,0x00001500,0x00001800,0x00001b00,0x00001e00,0x00002100,0x00002400,0x00002700,0x00002a00,0x00002d00,0x00003000,0x00003300,0x00003600,0x00003900,0x00003c00,0x00003f00,0x00004200,0x00004500,0x00004800,0x00004b00,0x00004e00,0x00005100,0x00005400,0x00005700,0x00005a00,0x00005d00,0x00006000,0x00006300,0x00006600,0x00006900,0x00006c00,0x00006f00,0x00007200,0x00007500,0x00007800,0x00007b00,0x00007e00,
  0x00008100,0x00008400,0x00008700,0x00008a00,0x00008d00,0x00009000,0x00009300,0x00009600,0x00009900,0x00009c00,0x00009f00,0x0000a200,0x0000a500,0x0000a800,0x0000ab00,0x0000ae00,0x0000b100,0x0000b400,0x0000b700,0x0000ba00,0x0000bd00,0x0000c000,0x0000c300,0x0000c600,0x0000c900,0x0000cc00,0x0000cf00,0x0000d200,0x0000d500,0x0000d800,0x0000db00,0x0000de00,0x0000e100,0x0000e400,0x0000e700,0x0000ea00,0x0000ed00,0x0000f000,0x0000f300,0x0000f600,0x0000f900,0x0000fc00,0x0000ff00
  };
const PaletteConstFWD<sizeof(colors_rgb_BG) / sizeof(unsigned int), true>   paletteBG(colors_rgb_BG);
const PaletteConstBWD<sizeof(colors_rgb_BG) / sizeof(unsigned int), true>   paletteBG_inv(colors_rgb_BG);

//////////////////////


const unsigned int colors_rgb_YB[] = { 
  0x00000000,0x00000303,0x00000606,0x00000909,0x00000c0c,0x00000f0f,0x00001212,0x00001515,0x00001818,0x00001b1b,0x00001e1e,0x00002121,0x00002424,0x00002727,0x00002a2a,0x00002d2d,0x00003030,0x00003333,0x00003636,0x00003939,0x00003c3c,0x00003f3f,0x00004242,0x00004545,0x00004848,0x00004b4b,0x00004e4e,0x00005151,0x00005454,0x00005757,0x00005a5a,0x00005d5d,0x00006060,0x00006363,0x00006666,0x00006969,0x00006c6c,0x00006f6f,0x00007272,0x00007575,0x00007878,0x00007b7b,0x00007e7e,
  0x00008181,0x00008484,0x00008787,0x00008a8a,0x00008d8d,0x00009090,0x00009393,0x00009696,0x00009999,0x00009c9c,0x00009f9f,0x0000a2a2,0x0000a5a5,0x0000a8a8,0x0000abab,0x0000aeae,0x0000b1b1,0x0000b4b4,0x0000b7b7,0x0000baba,0x0000bdbd,0x0000c0c0,0x0000c3c3,0x0000c6c6,0x0000c9c9,0x0000cccc,0x0000cfcf,0x0000d2d2,0x0000d5d5,0x0000d8d8,0x0000dbdb,0x0000dede,0x0000e1e1,0x0000e4e4,0x0000e7e7,0x0000eaea,0x0000eded,0x0000f0f0,0x0000f3f3,0x0000f6f6,0x0000f9f9,0x0000fcfc,0x0000ffff,
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000
  };
const PaletteConstFWD<sizeof(colors_rgb_YB) / sizeof(unsigned int), true>   paletteYB(colors_rgb_YB);
const PaletteConstBWD<sizeof(colors_rgb_YB) / sizeof(unsigned int), true>   paletteYB_inv(colors_rgb_YB);

const unsigned int colors_rgb_BY[] = { 
  0x00000000,0x00030000,0x00060000,0x00090000,0x000c0000,0x000f0000,0x00120000,0x00150000,0x00180000,0x001b0000,0x001e0000,0x00210000,0x00240000,0x00270000,0x002a0000,0x002d0000,0x00300000,0x00330000,0x00360000,0x00390000,0x003c0000,0x003f0000,0x00420000,0x00450000,0x00480000,0x004b0000,0x004e0000,0x00510000,0x00540000,0x00570000,0x005a0000,0x005d0000,0x00600000,0x00630000,0x00660000,0x00690000,0x006c0000,0x006f0000,0x00720000,0x00750000,0x00780000,0x007b0000,0x007e0000,
  0x00810000,0x00840000,0x00870000,0x008a0000,0x008d0000,0x00900000,0x00930000,0x00960000,0x00990000,0x009c0000,0x009f0000,0x00a20000,0x00a50000,0x00a80000,0x00ab0000,0x00ae0000,0x00b10000,0x00b40000,0x00b70000,0x00ba0000,0x00bd0000,0x00c00000,0x00c30000,0x00c60000,0x00c90000,0x00cc0000,0x00cf0000,0x00d20000,0x00d50000,0x00d80000,0x00db0000,0x00de0000,0x00e10000,0x00e40000,0x00e70000,0x00ea0000,0x00ed0000,0x00f00000,0x00f30000,0x00f60000,0x00f90000,0x00fc0000,0x00ff0000,
  0x00000000,0x00000303,0x00000606,0x00000909,0x00000c0c,0x00000f0f,0x00001212,0x00001515,0x00001818,0x00001b1b,0x00001e1e,0x00002121,0x00002424,0x00002727,0x00002a2a,0x00002d2d,0x00003030,0x00003333,0x00003636,0x00003939,0x00003c3c,0x00003f3f,0x00004242,0x00004545,0x00004848,0x00004b4b,0x00004e4e,0x00005151,0x00005454,0x00005757,0x00005a5a,0x00005d5d,0x00006060,0x00006363,0x00006666,0x00006969,0x00006c6c,0x00006f6f,0x00007272,0x00007575,0x00007878,0x00007b7b,0x00007e7e,
  0x00008181,0x00008484,0x00008787,0x00008a8a,0x00008d8d,0x00009090,0x00009393,0x00009696,0x00009999,0x00009c9c,0x00009f9f,0x0000a2a2,0x0000a5a5,0x0000a8a8,0x0000abab,0x0000aeae,0x0000b1b1,0x0000b4b4,0x0000b7b7,0x0000baba,0x0000bdbd,0x0000c0c0,0x0000c3c3,0x0000c6c6,0x0000c9c9,0x0000cccc,0x0000cfcf,0x0000d2d2,0x0000d5d5,0x0000d8d8,0x0000dbdb,0x0000dede,0x0000e1e1,0x0000e4e4,0x0000e7e7,0x0000eaea,0x0000eded,0x0000f0f0,0x0000f3f3,0x0000f6f6,0x0000f9f9,0x0000fcfc,0x0000ffff
  };
const PaletteConstFWD<sizeof(colors_rgb_BY) / sizeof(unsigned int), true>   paletteBY(colors_rgb_BY);
const PaletteConstBWD<sizeof(colors_rgb_BY) / sizeof(unsigned int), true>   paletteBY_inv(colors_rgb_BY);

//////////////////////


const unsigned int colors_rgb_RG_bright[] = { 
  0x00000000,0x00010103,0x00020106,0x00020209,0x0003020c,0x0004030f,0x00050412,0x00060415,0x00060518,0x0007051b,0x0008061e,0x00090721,0x000a0724,0x000a0827,0x000b082a,0x000c092d,0x000d0a30,0x000e0a33,0x000e0b36,0x000f0b39,0x00100c3c,0x00110d3f,0x00120d42,0x00120e45,0x00130e48,0x00140f4b,0x0015104e,0x00161051,0x00161154,0x00171157,0x0018125a,0x0019135d,0x001a1360,0x001a1463,0x001b1466,0x001c1569,0x001d166c,0x001e166f,0x001e1772,0x001f1775,0x00201878,0x0021197b,0x0022197e,
  0x00221a81,0x00231a84,0x00241b87,0x00251c8a,0x00261c8d,0x00261d90,0x00271d93,0x00281e96,0x00291f99,0x002a1f9c,0x002a209f,0x002b20a2,0x002c21a5,0x002d22a8,0x002e22ab,0x002e23ae,0x002f23b1,0x003024b4,0x003125b7,0x003225ba,0x003226bd,0x003326c0,0x003427c3,0x003528c6,0x003628c9,0x003629cc,0x003729cf,0x00382ad2,0x00392bd5,0x003a2bd8,0x003a2cdb,0x003b2cde,0x003c2de1,0x003d2ee4,0x003e2ee7,0x003e2fea,0x003f2fed,0x004030f0,0x004131f3,0x004231f6,0x004232f9,0x004332fc,0x004433ff,
  0x00000000,0x00010301,0x00020601,0x00020902,0x00030c02,0x00040f03,0x00051204,0x00061504,0x00061805,0x00071b05,0x00081e06,0x00092107,0x000a2407,0x000a2708,0x000b2a08,0x000c2d09,0x000d300a,0x000e330a,0x000e360b,0x000f390b,0x00103c0c,0x00113f0d,0x0012420d,0x0012450e,0x0013480e,0x00144b0f,0x00154e10,0x00165110,0x00165411,0x00175711,0x00185a12,0x00195d13,0x001a6013,0x001a6314,0x001b6614,0x001c6915,0x001d6c16,0x001e6f16,0x001e7217,0x001f7517,0x00207818,0x00217b19,0x00227e19,
  0x0022811a,0x0023841a,0x0024871b,0x00258a1c,0x00268d1c,0x0026901d,0x0027931d,0x0028961e,0x0029991f,0x002a9c1f,0x002a9f20,0x002ba220,0x002ca521,0x002da822,0x002eab22,0x002eae23,0x002fb123,0x0030b424,0x0031b725,0x0032ba25,0x0032bd26,0x0033c026,0x0034c327,0x0035c628,0x0036c928,0x0036cc29,0x0037cf29,0x0038d22a,0x0039d52b,0x003ad82b,0x003adb2c,0x003bde2c,0x003ce12d,0x003de42e,0x003ee72e,0x003eea2f,0x003fed2f,0x0040f030,0x0041f331,0x0042f631,0x0042f932,0x0043fc32,0x0044ff33
  };
const PaletteConstFWD<sizeof(colors_rgb_RG_bright) / sizeof(unsigned int), true>   paletteRG_bright(colors_rgb_RG_bright);
const PaletteConstBWD<sizeof(colors_rgb_RG_bright) / sizeof(unsigned int), true>   paletteRG_bright_inv(colors_rgb_RG_bright);

const unsigned int colors_rgb_GR_bright[] = { 
  0x00000000,0x00010301,0x00020601,0x00020902,0x00030c02,0x00040f03,0x00051204,0x00061504,0x00061805,0x00071b05,0x00081e06,0x00092107,0x000a2407,0x000a2708,0x000b2a08,0x000c2d09,0x000d300a,0x000e330a,0x000e360b,0x000f390b,0x00103c0c,0x00113f0d,0x0012420d,0x0012450e,0x0013480e,0x00144b0f,0x00154e10,0x00165110,0x00165411,0x00175711,0x00185a12,0x00195d13,0x001a6013,0x001a6314,0x001b6614,0x001c6915,0x001d6c16,0x001e6f16,0x001e7217,0x001f7517,0x00207818,0x00217b19,0x00227e19,
  0x0022811a,0x0023841a,0x0024871b,0x00258a1c,0x00268d1c,0x0026901d,0x0027931d,0x0028961e,0x0029991f,0x002a9c1f,0x002a9f20,0x002ba220,0x002ca521,0x002da822,0x002eab22,0x002eae23,0x002fb123,0x0030b424,0x0031b725,0x0032ba25,0x0032bd26,0x0033c026,0x0034c327,0x0035c628,0x0036c928,0x0036cc29,0x0037cf29,0x0038d22a,0x0039d52b,0x003ad82b,0x003adb2c,0x003bde2c,0x003ce12d,0x003de42e,0x003ee72e,0x003eea2f,0x003fed2f,0x0040f030,0x0041f331,0x0042f631,0x0042f932,0x0043fc32,0x0044ff33,
  0x00000000,0x00010103,0x00020106,0x00020209,0x0003020c,0x0004030f,0x00050412,0x00060415,0x00060518,0x0007051b,0x0008061e,0x00090721,0x000a0724,0x000a0827,0x000b082a,0x000c092d,0x000d0a30,0x000e0a33,0x000e0b36,0x000f0b39,0x00100c3c,0x00110d3f,0x00120d42,0x00120e45,0x00130e48,0x00140f4b,0x0015104e,0x00161051,0x00161154,0x00171157,0x0018125a,0x0019135d,0x001a1360,0x001a1463,0x001b1466,0x001c1569,0x001d166c,0x001e166f,0x001e1772,0x001f1775,0x00201878,0x0021197b,0x0022197e,
  0x00221a81,0x00231a84,0x00241b87,0x00251c8a,0x00261c8d,0x00261d90,0x00271d93,0x00281e96,0x00291f99,0x002a1f9c,0x002a209f,0x002b20a2,0x002c21a5,0x002d22a8,0x002e22ab,0x002e23ae,0x002f23b1,0x003024b4,0x003125b7,0x003225ba,0x003226bd,0x003326c0,0x003427c3,0x003528c6,0x003628c9,0x003629cc,0x003729cf,0x00382ad2,0x00392bd5,0x003a2bd8,0x003a2cdb,0x003b2cde,0x003c2de1,0x003d2ee4,0x003e2ee7,0x003e2fea,0x003f2fed,0x004030f0,0x004131f3,0x004231f6,0x004232f9,0x004332fc,0x004433ff
  };
const PaletteConstFWD<sizeof(colors_rgb_GR_bright) / sizeof(unsigned int), true>   paletteGR_bright(colors_rgb_GR_bright);
const PaletteConstBWD<sizeof(colors_rgb_GR_bright) / sizeof(unsigned int), true>   paletteGR_bright_inv(colors_rgb_GR_bright);


const unsigned int colors_rgb_RG_bright2[] = { 
  0x00000000,0x00010303,0x00020606,0x00020909,0x00030c0c,0x00040f0f,0x00051212,0x00061515,0x00061818,0x00071b1b,0x00081e1e,0x00092121,0x000a2424,0x000a2727,0x000b2a2a,0x000c2d2d,0x000d3030,0x000e3333,0x000e3336,0x000f3339,0x0010333c,0x0011333f,0x00123342,0x00123345,0x00133348,0x0014334b,0x0015334e,0x00163351,0x00163354,0x00173357,0x0018335a,0x0019335d,0x001a3360,0x001a3363,0x001b3366,0x001c3369,0x001d336c,0x001e336f,0x001e3372,0x001f3375,0x00203378,0x0021337b,0x0022337e,
  0x00223381,0x00233384,0x00243387,0x0025338a,0x0026338d,0x00263390,0x00273393,0x00283396,0x00293399,0x002a339c,0x002a339f,0x002b33a2,0x002c33a5,0x002d33a8,0x002e33ab,0x002e33ae,0x002f33b1,0x003033b4,0x003133b7,0x003233ba,0x003233bd,0x003333c0,0x003333c3,0x003333c6,0x003333c9,0x003333cc,0x003333cf,0x003333d2,0x003333d5,0x003333d8,0x003333db,0x003333de,0x003333e1,0x003333e4,0x003333e7,0x003333ea,0x003333ed,0x003333f0,0x003333f3,0x003333f6,0x003333f9,0x003333fc,0x003333ff,
  0x00000000,0x00010303,0x00020606,0x00020909,0x00030c0c,0x00040f0f,0x00051212,0x00061515,0x00061818,0x00071b1b,0x00081e1e,0x00092121,0x000a2424,0x000a2727,0x000b2a2a,0x000c2d2d,0x000d3030,0x000e3333,0x000e3633,0x000f3933,0x00103c33,0x00113f33,0x00124233,0x00124533,0x00134833,0x00144b33,0x00154e33,0x00165133,0x00165433,0x00175733,0x00185a33,0x00195d33,0x001a6033,0x001a6333,0x001b6633,0x001c6933,0x001d6c33,0x001e6f33,0x001e7233,0x001f7533,0x00207833,0x00217b33,0x00227e33,
  0x00228133,0x00238433,0x00248733,0x00258a33,0x00268d33,0x00269033,0x00279333,0x00289633,0x00299933,0x002a9c33,0x002a9f33,0x002ba233,0x002ca533,0x002da833,0x002eab33,0x002eae33,0x002fb133,0x0030b433,0x0031b733,0x0032ba33,0x0032bd33,0x0033c033,0x0033c333,0x0033c633,0x0033c933,0x0033cc33,0x0033cf33,0x0033d233,0x0033d533,0x0033d833,0x0033db33,0x0033de33,0x0033e133,0x0033e433,0x0033e733,0x0033ea33,0x0033ed33,0x0033f033,0x0033f333,0x0033f633,0x0033f933,0x0033fc33,0x0033ff33
  };
const PaletteConstFWD<sizeof(colors_rgb_RG_bright2) / sizeof(unsigned int), true>   paletteRG_bright2(colors_rgb_RG_bright2);
const PaletteConstBWD<sizeof(colors_rgb_RG_bright2) / sizeof(unsigned int), true>   paletteRG_bright2_inv(colors_rgb_RG_bright2);

const unsigned int colors_rgb_GR_bright2[] = { 
  0x00000000,0x00010303,0x00020606,0x00020909,0x00030c0c,0x00040f0f,0x00051212,0x00061515,0x00061818,0x00071b1b,0x00081e1e,0x00092121,0x000a2424,0x000a2727,0x000b2a2a,0x000c2d2d,0x000d3030,0x000e3333,0x000e3633,0x000f3933,0x00103c33,0x00113f33,0x00124233,0x00124533,0x00134833,0x00144b33,0x00154e33,0x00165133,0x00165433,0x00175733,0x00185a33,0x00195d33,0x001a6033,0x001a6333,0x001b6633,0x001c6933,0x001d6c33,0x001e6f33,0x001e7233,0x001f7533,0x00207833,0x00217b33,0x00227e33,
  0x00228133,0x00238433,0x00248733,0x00258a33,0x00268d33,0x00269033,0x00279333,0x00289633,0x00299933,0x002a9c33,0x002a9f33,0x002ba233,0x002ca533,0x002da833,0x002eab33,0x002eae33,0x002fb133,0x0030b433,0x0031b733,0x0032ba33,0x0032bd33,0x0033c033,0x0033c333,0x0033c633,0x0033c933,0x0033cc33,0x0033cf33,0x0033d233,0x0033d533,0x0033d833,0x0033db33,0x0033de33,0x0033e133,0x0033e433,0x0033e733,0x0033ea33,0x0033ed33,0x0033f033,0x0033f333,0x0033f633,0x0033f933,0x0033fc33,0x0033ff33,
  0x00000000,0x00010303,0x00020606,0x00020909,0x00030c0c,0x00040f0f,0x00051212,0x00061515,0x00061818,0x00071b1b,0x00081e1e,0x00092121,0x000a2424,0x000a2727,0x000b2a2a,0x000c2d2d,0x000d3030,0x000e3333,0x000e3336,0x000f3339,0x0010333c,0x0011333f,0x00123342,0x00123345,0x00133348,0x0014334b,0x0015334e,0x00163351,0x00163354,0x00173357,0x0018335a,0x0019335d,0x001a3360,0x001a3363,0x001b3366,0x001c3369,0x001d336c,0x001e336f,0x001e3372,0x001f3375,0x00203378,0x0021337b,0x0022337e,
  0x00223381,0x00233384,0x00243387,0x0025338a,0x0026338d,0x00263390,0x00273393,0x00283396,0x00293399,0x002a339c,0x002a339f,0x002b33a2,0x002c33a5,0x002d33a8,0x002e33ab,0x002e33ae,0x002f33b1,0x003033b4,0x003133b7,0x003233ba,0x003233bd,0x003333c0,0x003333c3,0x003333c6,0x003333c9,0x003333cc,0x003333cf,0x003333d2,0x003333d5,0x003333d8,0x003333db,0x003333de,0x003333e1,0x003333e4,0x003333e7,0x003333ea,0x003333ed,0x003333f0,0x003333f3,0x003333f6,0x003333f9,0x003333fc,0x003333ff
  };
const PaletteConstFWD<sizeof(colors_rgb_GR_bright2) / sizeof(unsigned int), true>   paletteGR_bright2(colors_rgb_GR_bright2);
const PaletteConstBWD<sizeof(colors_rgb_GR_bright2) / sizeof(unsigned int), true>   paletteGR_bright2_inv(colors_rgb_GR_bright2);

const unsigned int colors_rgb_RG_dark[] = { 
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000001,0x00000001,0x00000002,0x00000002,0x00000003,0x00000004,0x00000004,0x00000005,0x00000006,0x00000007,0x00000008,0x00000009,0x0000000a,0x0000000b,0x0000000d,0x0000000e,0x00000010,0x00000011,0x00000013,0x00000014,0x00000016,0x00000018,0x0000001a,0x0000001c,0x0000001e,0x00000020,0x00000022,0x00000024,0x00000026,0x00000029,0x0000002b,0x0000002e,0x00000030,0x00000033,0x00000036,0x00000038,0x0000003b,0x0000003e,
  0x00000041,0x00000044,0x00000047,0x0000004b,0x0000004e,0x00000051,0x00000055,0x00000058,0x0000005c,0x0000005f,0x00000063,0x00000067,0x0000006b,0x0000006f,0x00000073,0x00000077,0x0000007b,0x0000007f,0x00000083,0x00000088,0x0000008c,0x00000091,0x00000095,0x0000009a,0x0000009e,0x000000a3,0x000000a8,0x000000ad,0x000000b2,0x000000b7,0x000000bc,0x000000c1,0x000000c7,0x000000cc,0x000000d1,0x000000d7,0x000000dc,0x000000e2,0x000000e8,0x000000ed,0x000000f3,0x000000f9,0x000000ff,
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000100,0x00000100,0x00000100,0x00000200,0x00000200,0x00000300,0x00000400,0x00000400,0x00000500,0x00000600,0x00000700,0x00000800,0x00000900,0x00000a00,0x00000b00,0x00000d00,0x00000e00,0x00001000,0x00001100,0x00001300,0x00001400,0x00001600,0x00001800,0x00001a00,0x00001c00,0x00001e00,0x00002000,0x00002200,0x00002400,0x00002600,0x00002900,0x00002b00,0x00002e00,0x00003000,0x00003300,0x00003600,0x00003800,0x00003b00,0x00003e00,
  0x00004100,0x00004400,0x00004700,0x00004b00,0x00004e00,0x00005100,0x00005500,0x00005800,0x00005c00,0x00005f00,0x00006300,0x00006700,0x00006b00,0x00006f00,0x00007300,0x00007700,0x00007b00,0x00007f00,0x00008300,0x00008800,0x00008c00,0x00009100,0x00009500,0x00009a00,0x00009e00,0x0000a300,0x0000a800,0x0000ad00,0x0000b200,0x0000b700,0x0000bc00,0x0000c100,0x0000c700,0x0000cc00,0x0000d100,0x0000d700,0x0000dc00,0x0000e200,0x0000e800,0x0000ed00,0x0000f300,0x0000f900,0x0000ff00
  };
const PaletteConstFWD<sizeof(colors_rgb_RG_dark) / sizeof(unsigned int), true>   paletteRG_dark(colors_rgb_RG_dark);
const PaletteConstBWD<sizeof(colors_rgb_RG_dark) / sizeof(unsigned int), true>   paletteRG_dark_inv(colors_rgb_RG_dark);

const unsigned int colors_rgb_GR_dark[] = { 
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000100,0x00000100,0x00000100,0x00000200,0x00000200,0x00000300,0x00000400,0x00000400,0x00000500,0x00000600,0x00000700,0x00000800,0x00000900,0x00000a00,0x00000b00,0x00000d00,0x00000e00,0x00001000,0x00001100,0x00001300,0x00001400,0x00001600,0x00001800,0x00001a00,0x00001c00,0x00001e00,0x00002000,0x00002200,0x00002400,0x00002600,0x00002900,0x00002b00,0x00002e00,0x00003000,0x00003300,0x00003600,0x00003800,0x00003b00,0x00003e00,
  0x00004100,0x00004400,0x00004700,0x00004b00,0x00004e00,0x00005100,0x00005500,0x00005800,0x00005c00,0x00005f00,0x00006300,0x00006700,0x00006b00,0x00006f00,0x00007300,0x00007700,0x00007b00,0x00007f00,0x00008300,0x00008800,0x00008c00,0x00009100,0x00009500,0x00009a00,0x00009e00,0x0000a300,0x0000a800,0x0000ad00,0x0000b200,0x0000b700,0x0000bc00,0x0000c100,0x0000c700,0x0000cc00,0x0000d100,0x0000d700,0x0000dc00,0x0000e200,0x0000e800,0x0000ed00,0x0000f300,0x0000f900,0x0000ff00,
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000001,0x00000001,0x00000001,0x00000002,0x00000002,0x00000003,0x00000004,0x00000004,0x00000005,0x00000006,0x00000007,0x00000008,0x00000009,0x0000000a,0x0000000b,0x0000000d,0x0000000e,0x00000010,0x00000011,0x00000013,0x00000014,0x00000016,0x00000018,0x0000001a,0x0000001c,0x0000001e,0x00000020,0x00000022,0x00000024,0x00000026,0x00000029,0x0000002b,0x0000002e,0x00000030,0x00000033,0x00000036,0x00000038,0x0000003b,0x0000003e,
  0x00000041,0x00000044,0x00000047,0x0000004b,0x0000004e,0x00000051,0x00000055,0x00000058,0x0000005c,0x0000005f,0x00000063,0x00000067,0x0000006b,0x0000006f,0x00000073,0x00000077,0x0000007b,0x0000007f,0x00000083,0x00000088,0x0000008c,0x00000091,0x00000095,0x0000009a,0x0000009e,0x000000a3,0x000000a8,0x000000ad,0x000000b2,0x000000b7,0x000000bc,0x000000c1,0x000000c7,0x000000cc,0x000000d1,0x000000d7,0x000000dc,0x000000e2,0x000000e8,0x000000ed,0x000000f3,0x000000f9,0x000000ff
  };
const PaletteConstFWD<sizeof(colors_rgb_GR_dark) / sizeof(unsigned int), true>   paletteGR_dark(colors_rgb_GR_dark);
const PaletteConstBWD<sizeof(colors_rgb_GR_dark) / sizeof(unsigned int), true>   paletteGR_dark_inv(colors_rgb_GR_dark);



///////////////////////////////////////// SEMAPHORES  /////////////////////////////////////////////////////////////

const unsigned int colors_rgb_SemaphoreRYGgrad [] = { 
  0x00000000,0x00001900,0x00003300,0x00004c00,0x00006600,0x00007f00,0x00009900,0x0000b200,0x0000cc00,0x0000e500,
  0x0000ff00,0x00000000,0x00001919,0x00003333,0x00004c4c,0x00006666,0x00007f7f,0x00009999,0x0000b2b2,0x0000cccc,
  0x0000e5e5,0x0000ffff,0x00000000,0x00000019,0x00000033,0x0000004c,0x00000066,0x0000007f,0x00000099,0x000000b2,
  0x000000cc,0x000000e5,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRYGgrad) / sizeof(unsigned int), true>   paletteSemaphoreRYGgrad(colors_rgb_SemaphoreRYGgrad);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRYGgrad) / sizeof(unsigned int), true>   paletteSemaphoreRYGgrad_inv(colors_rgb_SemaphoreRYGgrad);

const unsigned int colors_rgb_SemaphoreRYG [] = { 
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x000000ff,0x000000ff,0x000000ff,0x000000ff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRYG) / sizeof(unsigned int), true>   paletteSemaphoreRYG(colors_rgb_SemaphoreRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRYG) / sizeof(unsigned int), true>   paletteSemaphoreRYG_inv(colors_rgb_SemaphoreRYG);

const unsigned int colors_rgb_SemaphoreRG [] = { 
  0x000000ff,0x000000ff,0x000000ff,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreRG) / sizeof(unsigned int), true>   paletteSemaphoreRG(colors_rgb_SemaphoreRG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreRG) / sizeof(unsigned int), true>   paletteSemaphoreRG_inv(colors_rgb_SemaphoreRG);


const unsigned int colors_rgb_SemaphoreGRYG [] = { 
  0x00999999,0x00999999,0x00999999,0x00999999,0x00999999,0x00999999,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreGRYG) / sizeof(unsigned int), true>   paletteSemaphoreGRYG(colors_rgb_SemaphoreGRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreGRYG) / sizeof(unsigned int), true>   paletteSemaphoreGRYG_inv(colors_rgb_SemaphoreGRYG);

const unsigned int colors_rgb_SemaphoreGRYGsimple [] = { 
  0x00999999,0x000000ff,0x0000ffff,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreGRYGsimple) / sizeof(unsigned int), true>   paletteSemaphoreGRYGsimple(colors_rgb_SemaphoreGRYGsimple);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreGRYGsimple) / sizeof(unsigned int), true>   paletteSemaphoreGRYGsimple_inv(colors_rgb_SemaphoreGRYGsimple);

const unsigned int colors_rgb_SemaphoreBRYG [] = { 
  0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x00000000,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreBRYG) / sizeof(unsigned int), true>   paletteSemaphoreBRYG(colors_rgb_SemaphoreBRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreBRYG) / sizeof(unsigned int), true>   paletteSemaphoreBRYG_inv(colors_rgb_SemaphoreBRYG);

const unsigned int colors_rgb_SemaphoreWRYG [] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x000000ff,0x000000ff,0x000000ff,0x000000ff,
  0x000000ff,0x000000ff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ffff,0x0000ff00,0x0000ff00,
  0x0000ff00,0x0000ff00,0x0000ff00,0x0000ff00
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreWRYG) / sizeof(unsigned int), true>   paletteSemaphoreWRYG(colors_rgb_SemaphoreWRYG);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreWRYG) / sizeof(unsigned int), true>   paletteSemaphoreWRYG_inv(colors_rgb_SemaphoreWRYG);


const unsigned int colors_rgb_SemaphoreWRYGgrad [] = { 
  0x00000000,0x000b0b0b,0x00161616,0x00212121,0x002c2c2c,0x00373737,0x00424242,0x004d4d4d,0x00585858,0x00636363,
  0x006e6e6e,0x00797979,0x00858585,0x00909090,0x009b9b9b,0x00a6a6a6,0x00b1b1b1,0x00bcbcbc,0x00c7c7c7,0x00d2d2d2,
  0x00dddddd,0x00e8e8e8,0x00f3f3f3,0x00ffffff,0x000000ff,0x000b0bff,0x001616ff,0x002121ff,0x002c2cff,0x003737ff,
  0x004242ff,0x004d4dff,0x005858ff,0x006363ff,0x006e6eff,0x007979ff,0x008585ff,0x009090ff,0x009b9bff,0x00a6a6ff,
  0x00b1b1ff,0x00bcbcff,0x00c7c7ff,0x00d2d2ff,0x00ddddff,0x00e8e8ff,0x00f3f3ff,0x00ffffff,0x0000ffff,0x000bffff,
  0x0016ffff,0x0021ffff,0x002cffff,0x0037ffff,0x0042ffff,0x004dffff,0x0058ffff,0x0063ffff,0x006effff,0x0079ffff,
  0x0085ffff,0x0090ffff,0x009bffff,0x00a6ffff,0x00b1ffff,0x00bcffff,0x00c7ffff,0x00d2ffff,0x00ddffff,0x00e8ffff,
  0x00f3ffff,0x00ffffff,0x0000ff00,0x000bff0b,0x0016ff16,0x0021ff21,0x002cff2c,0x0037ff37,0x0042ff42,0x004dff4d,
  0x0058ff58,0x0063ff63,0x006eff6e,0x0079ff79,0x0085ff85,0x0090ff90,0x009bff9b,0x00a6ffa6,0x00b1ffb1,0x00bcffbc,
  0x00c7ffc7,0x00d2ffd2,0x00ddffdd,0x00e8ffe8,0x00f3fff3,0x00ffffff
};
const PaletteConstFWD<sizeof(colors_rgb_SemaphoreWRYGgrad) / sizeof(unsigned int), true>   paletteSemaphoreWRYGgrad(colors_rgb_SemaphoreWRYGgrad);
const PaletteConstBWD<sizeof(colors_rgb_SemaphoreWRYGgrad) / sizeof(unsigned int), true>   paletteSemaphoreWRYGgrad_inv(colors_rgb_SemaphoreWRYGgrad);

#endif // PALETTES_RGB_H

