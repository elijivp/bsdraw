#ifndef PALETTES_SPEC_H
#define PALETTES_SPEC_H

/// Non-standard palettes
/// Created By: Elijah Vlasov

#include "special/spec_BlGnYe.h"
#include "special/spec_BlYeRd.h"
#include "special/spec_GnYe.h"


///////////////////////////////////////// WhiteRed  /////////////////////////////////////////////////////////////

const unsigned int colors_rgb_WR_02[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,
  0x00fdfdfe,0x00fdfdfe,0x00fdfdfe,0x00fdfdfe,0x00fcfcfe,0x00fcfcfe,0x00fbfbfd,0x00fbfbfd,0x00fbfbfd,0x00fafafd,0x00fafafd,0x00f9f9fc,0x00f9f9fc,0x00f8f8fc,0x00f7f7fc,0x00f7f7fc,0x00f6f6fb,0x00f5f5fb,0x00f5f5fb,0x00f4f4fb,0x00f3f3fa,0x00f2f2fa,0x00f2f2fa,0x00f1f1f9,0x00f0f0f9,0x00efeff9,0x00eeeef8,0x00ededf8,0x00ececf8,0x00ebebf7,0x00eaeaf7,0x00e9e9f6,0x00e8e8f6,0x00e7e7f6,0x00e6e6f5,0x00e5e5f5,0x00e3e3f4,0x00e2e2f4,0x00e1e1f3,0x00e0e0f3,0x00dedef2,0x00ddddf2,0x00dcdcf1,
  0x00dadaf1,0x00d9d9f0,0x00d7d7f0,0x00d6d6ef,0x00d5d5ef,0x00d3d3ee,0x00d1d1ee,0x00d0d0ed,0x00ceceec,0x00cdcdec,0x00cbcbeb,0x00c9c9ea,0x00c8c8ea,0x00c6c6e9,0x00c4c4e9,0x00c2c2e8,0x00c1c1e7,0x00bfbfe7,0x00bdbde6,0x00bbbbe5,0x00b9b9e4,0x00b7b7e4,0x00b5b5e3,0x00b3b3e2,0x00b1b1e1,0x00afafe1,0x00adade0,0x00ababdf,0x00a9a9de,0x00a7a7dd,0x00a4a4dd,0x00a2a2dc,0x00a0a0db,0x009e9eda,0x009b9bd9,0x009999d8,0x009797d7,0x009494d7,0x009292d6,0x009090d5,0x008d8dd4,0x008b8bd3,0x008888d2,
  0x008686d1,0x008383d0,0x008181cf,0x007e7ece,0x007b7bcd,0x007979cc,0x007676cb,0x007373ca,0x007070c9,0x006e6ec8,0x006b6bc7,0x006868c6,0x006565c5,0x006262c4,0x005f5fc3,0x005c5cc2,0x005a5ac0,0x005757bf,0x005454be,0x005050bd,0x004d4dbc,0x004a4abb,0x004747b9,0x004444b8,0x004141b7,0x003e3eb6,0x003a3ab5,0x003737b3,0x003434b2,0x003131b1,0x002d2db0,0x002a2aae,0x002727ad,0x002323ac,0x002020ab,0x001c1ca9,0x001919a8,0x001515a7,0x001212a5,0x000e0ea4,0x000a0aa3,0x000707a1,0x000303a0
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_02) / sizeof(unsigned int)>   paletteWR_02(colors_rgb_WR_02);
const PaletteConstBWD<sizeof(colors_rgb_WR_02) / sizeof(unsigned int)>   paletteWR_02_inv(colors_rgb_WR_02);

const unsigned int colors_rgb_WR_03[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fdfdfe,0x00fdfdfe,0x00fcfcfe,0x00fcfcfe,0x00fcfcfd,0x00fbfbfd,0x00fbfbfd,0x00fafafd,0x00f9f9fd,0x00f9f9fc,0x00f8f8fc,0x00f8f8fc,0x00f7f7fc,0x00f6f6fb,0x00f5f5fb,0x00f4f4fb,0x00f4f4fa,0x00f3f3fa,0x00f2f2fa,0x00f1f1f9,0x00f0f0f9,0x00efeff9,0x00eeeef8,0x00ededf8,0x00ececf7,0x00eaeaf7,
  0x00e9e9f6,0x00e8e8f6,0x00e7e7f6,0x00e5e5f5,0x00e4e4f5,0x00e3e3f4,0x00e1e1f3,0x00e0e0f3,0x00dedef2,0x00ddddf2,0x00dbdbf1,0x00dadaf1,0x00d8d8f0,0x00d6d6ef,0x00d5d5ef,0x00d3d3ee,0x00d1d1ed,0x00cfcfed,0x00ceceec,0x00cccceb,0x00cacaeb,0x00c8c8ea,0x00c6c6e9,0x00c4c4e8,0x00c2c2e8,0x00c0c0e7,0x00bebee6,0x00bcbce5,0x00b9b9e4,0x00b7b7e4,0x00b5b5e3,0x00b3b3e2,0x00b0b0e1,0x00aeaee0,0x00acacdf,0x00a9a9de,0x00a7a7dd,0x00a4a4dd,0x00a2a2dc,0x009f9fdb,0x009d9dda,0x009a9ad9,0x009797d8,
  0x009595d7,0x009292d6,0x008f8fd5,0x008c8cd3,0x008989d2,0x008787d1,0x008484d0,0x008181cf,0x007e7ece,0x007b7bcd,0x007878cc,0x007575cb,0x007171c9,0x006e6ec8,0x006b6bc7,0x006868c6,0x006565c5,0x006161c3,0x005e5ec2,0x005b5bc1,0x005757c0,0x005454be,0x005050bd,0x004d4dbc,0x004949ba,0x004646b9,0x004242b8,0x003e3eb6,0x003b3bb5,0x003737b3,0x003333b2,0x003030b1,0x002c2caf,0x002828ae,0x002424ac,0x002020ab,0x001c1ca9,0x001818a8,0x001414a6,0x001010a5,0x000c0ca3,0x000808a2,0x000404a0
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_03) / sizeof(unsigned int)>   paletteWR_03(colors_rgb_WR_03);
const PaletteConstBWD<sizeof(colors_rgb_WR_03) / sizeof(unsigned int)>   paletteWR_03_inv(colors_rgb_WR_03);


const unsigned int colors_rgb_WR_04[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fdfdfe,0x00fdfdfe,0x00fcfcfe,0x00fcfcfd,0x00fbfbfd,0x00fbfbfd,0x00fafafd,0x00f9f9fd,0x00f8f8fc,0x00f8f8fc,
  0x00f7f7fc,0x00f6f6fb,0x00f5f5fb,0x00f4f4fb,0x00f3f3fa,0x00f2f2fa,0x00f1f1f9,0x00f0f0f9,0x00efeff9,0x00ededf8,0x00ececf8,0x00ebebf7,0x00e9e9f7,0x00e8e8f6,0x00e6e6f5,0x00e5e5f5,0x00e3e3f4,0x00e2e2f4,0x00e0e0f3,0x00dedef2,0x00dcdcf2,0x00dbdbf1,0x00d9d9f0,0x00d7d7f0,0x00d5d5ef,0x00d3d3ee,0x00d1d1ed,0x00cfcfed,0x00cdcdec,0x00cacaeb,0x00c8c8ea,0x00c6c6e9,0x00c4c4e8,0x00c1c1e7,0x00bfbfe7,0x00bcbce6,0x00babae5,0x00b7b7e4,0x00b5b5e3,0x00b2b2e2,0x00afafe1,0x00acace0,0x00aaaadf,
  0x00a7a7dd,0x00a4a4dc,0x00a1a1db,0x009e9eda,0x009b9bd9,0x009898d8,0x009595d7,0x009191d5,0x008e8ed4,0x008b8bd3,0x008888d2,0x008484d0,0x008181cf,0x007d7dce,0x007a7acd,0x007676cb,0x007373ca,0x006f6fc9,0x006b6bc7,0x006868c6,0x006464c4,0x006060c3,0x005c5cc1,0x005858c0,0x005454be,0x005050bd,0x004c4cbb,0x004848ba,0x004444b8,0x004040b7,0x003b3bb5,0x003737b3,0x003333b2,0x002e2eb0,0x002a2aae,0x002525ad,0x002121ab,0x001c1ca9,0x001717a8,0x001313a6,0x000e0ea4,0x000909a2,0x000404a0
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_04) / sizeof(unsigned int)>   paletteWR_04(colors_rgb_WR_04);
const PaletteConstBWD<sizeof(colors_rgb_WR_04) / sizeof(unsigned int)>   paletteWR_04_inv(colors_rgb_WR_04);

const unsigned int colors_rgb_WR_05[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fdfdfe,0x00fcfcfe,0x00fcfcfd,0x00fbfbfd,0x00fafafd,0x00fafafd,0x00f9f9fc,0x00f8f8fc,0x00f7f7fc,0x00f6f6fb,0x00f5f5fb,0x00f3f3fa,0x00f2f2fa,0x00f1f1f9,0x00efeff9,0x00eeeef8,0x00ececf8,0x00ebebf7,0x00e9e9f6,0x00e7e7f6,0x00e5e5f5,0x00e3e3f4,0x00e2e2f4,0x00dfdff3,0x00ddddf2,0x00dbdbf1,0x00d9d9f0,0x00d7d7ef,0x00d4d4ef,0x00d2d2ee,0x00cfcfed,0x00cdcdec,0x00cacaeb,0x00c7c7ea,0x00c5c5e9,0x00c2c2e8,
  0x00bfbfe7,0x00bcbce5,0x00b9b9e4,0x00b6b6e3,0x00b2b2e2,0x00afafe1,0x00acacdf,0x00a8a8de,0x00a5a5dd,0x00a1a1db,0x009e9eda,0x009a9ad9,0x009696d7,0x009292d6,0x008e8ed4,0x008b8bd3,0x008686d1,0x008282d0,0x007e7ece,0x007a7acd,0x007676cb,0x007171c9,0x006d6dc8,0x006868c6,0x006464c4,0x005f5fc2,0x005a5ac1,0x005656bf,0x005151bd,0x004c4cbb,0x004747b9,0x004242b7,0x003d3db5,0x003737b4,0x003232b2,0x002d2db0,0x002727ad,0x002222ab,0x001c1ca9,0x001717a7,0x001111a5,0x000b0ba3,0x000505a1
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_05) / sizeof(unsigned int)>   paletteWR_05(colors_rgb_WR_05);
const PaletteConstBWD<sizeof(colors_rgb_WR_05) / sizeof(unsigned int)>   paletteWR_05_inv(colors_rgb_WR_05);


const unsigned int colors_rgb_WR_06[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fdfdfe,0x00fcfcfe,0x00fbfbfd,0x00fafafd,0x00f9f9fc,0x00f8f8fc,0x00f7f7fc,0x00f5f5fb,0x00f4f4fb,0x00f2f2fa,0x00f1f1f9,0x00efeff9,0x00ededf8,0x00ebebf7,0x00e9e9f6,0x00e7e7f6,0x00e5e5f5,0x00e2e2f4,0x00e0e0f3,0x00ddddf2,
  0x00dadaf1,0x00d7d7f0,0x00d5d5ef,0x00d1d1ee,0x00ceceec,0x00cbcbeb,0x00c8c8ea,0x00c4c4e9,0x00c1c1e7,0x00bdbde6,0x00b9b9e4,0x00b5b5e3,0x00b1b1e1,0x00adade0,0x00a9a9de,0x00a4a4dd,0x00a0a0db,0x009b9bd9,0x009797d7,0x009292d6,0x008d8dd4,0x008888d2,0x008383d0,0x007e7ece,0x007979cc,0x007373ca,0x006e6ec8,0x006868c6,0x006262c4,0x005c5cc2,0x005757bf,0x005050bd,0x004a4abb,0x004444b8,0x003e3eb6,0x003737b3,0x003131b1,0x002a2aae,0x002323ac,0x001c1ca9,0x001515a7,0x000e0ea4,0x000707a1
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_06) / sizeof(unsigned int)>   paletteWR_06(colors_rgb_WR_06);
const PaletteConstBWD<sizeof(colors_rgb_WR_06) / sizeof(unsigned int)>   paletteWR_06_inv(colors_rgb_WR_06);

const unsigned int colors_rgb_WR_07[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fcfcfe,0x00fbfbfd,0x00fafafd,0x00f8f8fc,
  0x00f7f7fc,0x00f5f5fb,0x00f3f3fa,0x00f1f1f9,0x00efeff9,0x00ececf8,0x00e9e9f7,0x00e6e6f5,0x00e3e3f4,0x00e0e0f3,0x00dcdcf2,0x00d9d9f0,0x00d5d5ef,0x00d1d1ed,0x00cdcdec,0x00c8c8ea,0x00c4c4e8,0x00bfbfe7,0x00babae5,0x00b5b5e3,0x00afafe1,0x00aaaadf,0x00a4a4dc,0x009e9eda,0x009898d8,0x009191d5,0x008b8bd3,0x008484d0,0x007d7dce,0x007676cb,0x006f6fc9,0x006868c6,0x006060c3,0x005858c0,0x005050bd,0x004848ba,0x004040b7,0x003737b3,0x002e2eb0,0x002525ad,0x001c1ca9,0x001313a6,0x000909a2
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_07) / sizeof(unsigned int)>   paletteWR_07(colors_rgb_WR_07);
const PaletteConstBWD<sizeof(colors_rgb_WR_07) / sizeof(unsigned int)>   paletteWR_07_inv(colors_rgb_WR_07);

const unsigned int colors_rgb_WR_08[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fdfdfe,0x00fbfbfd,0x00f9f9fd,0x00f7f7fc,0x00f4f4fb,0x00f1f1f9,0x00eeeef8,0x00eaeaf7,0x00e5e5f5,0x00e1e1f3,0x00dbdbf1,0x00d6d6ef,0x00d0d0ed,0x00c9c9ea,0x00c2c2e8,0x00bbbbe5,0x00b3b3e2,0x00ababdf,0x00a3a3dc,0x009a9ad9,0x009090d5,0x008787d1,0x007c7cce,0x007272ca,0x006767c5,0x005b5bc1,0x004f4fbd,0x004343b8,0x003636b3,0x002929ae,0x001c1ca9,0x000e0ea4
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_08) / sizeof(unsigned int)>   paletteWR_08(colors_rgb_WR_08);
const PaletteConstBWD<sizeof(colors_rgb_WR_08) / sizeof(unsigned int)>   paletteWR_08_inv(colors_rgb_WR_08);

const unsigned int colors_rgb_WR_09[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fbfbfd,0x00f7f7fc,0x00f2f2fa,0x00ebebf7,0x00e2e2f4,0x00d8d8f0,0x00ccccec,0x00bfbfe7,0x00b0b0e1,0x009f9fdb,0x008d8dd4,0x007979cc,0x006464c4,0x004d4dbc,0x003535b3,0x001b1ba9
  };
const PaletteConstFWD<sizeof(colors_rgb_WR_09) / sizeof(unsigned int)>   paletteWR_09(colors_rgb_WR_09);
const PaletteConstBWD<sizeof(colors_rgb_WR_09) / sizeof(unsigned int)>   paletteWR_09_inv(colors_rgb_WR_09);

//////////////////////////////////////////////////////////////    WhiteGreen

const unsigned int colors_rgb_WG_02[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,
  0x00fdfefd,0x00fdfefd,0x00fdfefd,0x00fdfefd,0x00fcfefc,0x00fcfefc,0x00fbfdfb,0x00fbfdfb,0x00fbfdfb,0x00fafdfa,0x00fafdfa,0x00f9fcf9,0x00f9fcf9,0x00f8fcf8,0x00f7fcf7,0x00f7fcf7,0x00f6fbf6,0x00f5fbf5,0x00f5fbf5,0x00f4fbf4,0x00f3faf3,0x00f2faf2,0x00f2faf2,0x00f1f9f1,0x00f0f9f0,0x00eff9ef,0x00eef8ee,0x00edf8ed,0x00ecf8ec,0x00ebf7eb,0x00eaf7ea,0x00e9f6e9,0x00e8f6e8,0x00e7f6e7,0x00e6f5e6,0x00e5f5e5,0x00e3f4e3,0x00e2f4e2,0x00e1f3e1,0x00e0f3e0,0x00def2de,0x00ddf2dd,0x00dcf1dc,
  0x00daf1da,0x00d9f0d9,0x00d7f0d7,0x00d6efd6,0x00d5efd5,0x00d3eed3,0x00d1eed1,0x00d0edd0,0x00ceecce,0x00cdeccd,0x00cbebcb,0x00c9eac9,0x00c8eac8,0x00c6e9c6,0x00c4e9c4,0x00c2e8c2,0x00c1e7c1,0x00bfe7bf,0x00bde6bd,0x00bbe5bb,0x00b9e4b9,0x00b7e4b7,0x00b5e3b5,0x00b3e2b3,0x00b1e1b1,0x00afe1af,0x00ade0ad,0x00abdfab,0x00a9dea9,0x00a7dda7,0x00a4dda4,0x00a2dca2,0x00a0dba0,0x009eda9e,0x009bd99b,0x0099d899,0x0097d797,0x0094d794,0x0092d692,0x0090d590,0x008dd48d,0x008bd38b,0x0088d288,
  0x0086d186,0x0083d083,0x0081cf81,0x007ece7e,0x007bcd7b,0x0079cc79,0x0076cb76,0x0073ca73,0x0070c970,0x006ec86e,0x006bc76b,0x0068c668,0x0065c565,0x0062c462,0x005fc35f,0x005cc25c,0x005ac05a,0x0057bf57,0x0054be54,0x0050bd50,0x004dbc4d,0x004abb4a,0x0047b947,0x0044b844,0x0041b741,0x003eb63e,0x003ab53a,0x0037b337,0x0034b234,0x0031b131,0x002db02d,0x002aae2a,0x0027ad27,0x0023ac23,0x0020ab20,0x001ca91c,0x0019a819,0x0015a715,0x0012a512,0x000ea40e,0x000aa30a,0x0007a107,0x0003a003
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_02) / sizeof(unsigned int)>   paletteWG_02(colors_rgb_WG_02);
const PaletteConstBWD<sizeof(colors_rgb_WG_02) / sizeof(unsigned int)>   paletteWG_02_inv(colors_rgb_WG_02);

const unsigned int colors_rgb_WG_03[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fdfefd,0x00fdfefd,0x00fcfefc,0x00fcfefc,0x00fcfdfc,0x00fbfdfb,0x00fbfdfb,0x00fafdfa,0x00f9fdf9,0x00f9fcf9,0x00f8fcf8,0x00f8fcf8,0x00f7fcf7,0x00f6fbf6,0x00f5fbf5,0x00f4fbf4,0x00f4faf4,0x00f3faf3,0x00f2faf2,0x00f1f9f1,0x00f0f9f0,0x00eff9ef,0x00eef8ee,0x00edf8ed,0x00ecf7ec,0x00eaf7ea,
  0x00e9f6e9,0x00e8f6e8,0x00e7f6e7,0x00e5f5e5,0x00e4f5e4,0x00e3f4e3,0x00e1f3e1,0x00e0f3e0,0x00def2de,0x00ddf2dd,0x00dbf1db,0x00daf1da,0x00d8f0d8,0x00d6efd6,0x00d5efd5,0x00d3eed3,0x00d1edd1,0x00cfedcf,0x00ceecce,0x00ccebcc,0x00caebca,0x00c8eac8,0x00c6e9c6,0x00c4e8c4,0x00c2e8c2,0x00c0e7c0,0x00bee6be,0x00bce5bc,0x00b9e4b9,0x00b7e4b7,0x00b5e3b5,0x00b3e2b3,0x00b0e1b0,0x00aee0ae,0x00acdfac,0x00a9dea9,0x00a7dda7,0x00a4dda4,0x00a2dca2,0x009fdb9f,0x009dda9d,0x009ad99a,0x0097d897,
  0x0095d795,0x0092d692,0x008fd58f,0x008cd38c,0x0089d289,0x0087d187,0x0084d084,0x0081cf81,0x007ece7e,0x007bcd7b,0x0078cc78,0x0075cb75,0x0071c971,0x006ec86e,0x006bc76b,0x0068c668,0x0065c565,0x0061c361,0x005ec25e,0x005bc15b,0x0057c057,0x0054be54,0x0050bd50,0x004dbc4d,0x0049ba49,0x0046b946,0x0042b842,0x003eb63e,0x003bb53b,0x0037b337,0x0033b233,0x0030b130,0x002caf2c,0x0028ae28,0x0024ac24,0x0020ab20,0x001ca91c,0x0018a818,0x0014a614,0x0010a510,0x000ca30c,0x0008a208,0x0004a004
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_03) / sizeof(unsigned int)>   paletteWG_03(colors_rgb_WG_03);
const PaletteConstBWD<sizeof(colors_rgb_WG_03) / sizeof(unsigned int)>   paletteWG_03_inv(colors_rgb_WG_03);

const unsigned int colors_rgb_WG_04[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fdfefd,0x00fdfefd,0x00fcfefc,0x00fcfdfc,0x00fbfdfb,0x00fbfdfb,0x00fafdfa,0x00f9fdf9,0x00f8fcf8,0x00f8fcf8,
  0x00f7fcf7,0x00f6fbf6,0x00f5fbf5,0x00f4fbf4,0x00f3faf3,0x00f2faf2,0x00f1f9f1,0x00f0f9f0,0x00eff9ef,0x00edf8ed,0x00ecf8ec,0x00ebf7eb,0x00e9f7e9,0x00e8f6e8,0x00e6f5e6,0x00e5f5e5,0x00e3f4e3,0x00e2f4e2,0x00e0f3e0,0x00def2de,0x00dcf2dc,0x00dbf1db,0x00d9f0d9,0x00d7f0d7,0x00d5efd5,0x00d3eed3,0x00d1edd1,0x00cfedcf,0x00cdeccd,0x00caebca,0x00c8eac8,0x00c6e9c6,0x00c4e8c4,0x00c1e7c1,0x00bfe7bf,0x00bce6bc,0x00bae5ba,0x00b7e4b7,0x00b5e3b5,0x00b2e2b2,0x00afe1af,0x00ace0ac,0x00aadfaa,
  0x00a7dda7,0x00a4dca4,0x00a1dba1,0x009eda9e,0x009bd99b,0x0098d898,0x0095d795,0x0091d591,0x008ed48e,0x008bd38b,0x0088d288,0x0084d084,0x0081cf81,0x007dce7d,0x007acd7a,0x0076cb76,0x0073ca73,0x006fc96f,0x006bc76b,0x0068c668,0x0064c464,0x0060c360,0x005cc15c,0x0058c058,0x0054be54,0x0050bd50,0x004cbb4c,0x0048ba48,0x0044b844,0x0040b740,0x003bb53b,0x0037b337,0x0033b233,0x002eb02e,0x002aae2a,0x0025ad25,0x0021ab21,0x001ca91c,0x0017a817,0x0013a613,0x000ea40e,0x0009a209,0x0004a004
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_04) / sizeof(unsigned int)>   paletteWG_04(colors_rgb_WG_04);
const PaletteConstBWD<sizeof(colors_rgb_WG_04) / sizeof(unsigned int)>   paletteWG_04_inv(colors_rgb_WG_04);

const unsigned int colors_rgb_WG_05[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fdfefd,0x00fcfefc,0x00fcfdfc,0x00fbfdfb,0x00fafdfa,0x00fafdfa,0x00f9fcf9,0x00f8fcf8,0x00f7fcf7,0x00f6fbf6,0x00f5fbf5,0x00f3faf3,0x00f2faf2,0x00f1f9f1,0x00eff9ef,0x00eef8ee,0x00ecf8ec,0x00ebf7eb,0x00e9f6e9,0x00e7f6e7,0x00e5f5e5,0x00e3f4e3,0x00e2f4e2,0x00dff3df,0x00ddf2dd,0x00dbf1db,0x00d9f0d9,0x00d7efd7,0x00d4efd4,0x00d2eed2,0x00cfedcf,0x00cdeccd,0x00caebca,0x00c7eac7,0x00c5e9c5,0x00c2e8c2,
  0x00bfe7bf,0x00bce5bc,0x00b9e4b9,0x00b6e3b6,0x00b2e2b2,0x00afe1af,0x00acdfac,0x00a8dea8,0x00a5dda5,0x00a1dba1,0x009eda9e,0x009ad99a,0x0096d796,0x0092d692,0x008ed48e,0x008bd38b,0x0086d186,0x0082d082,0x007ece7e,0x007acd7a,0x0076cb76,0x0071c971,0x006dc86d,0x0068c668,0x0064c464,0x005fc25f,0x005ac15a,0x0056bf56,0x0051bd51,0x004cbb4c,0x0047b947,0x0042b742,0x003db53d,0x0037b437,0x0032b232,0x002db02d,0x0027ad27,0x0022ab22,0x001ca91c,0x0017a717,0x0011a511,0x000ba30b,0x0005a105
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_05) / sizeof(unsigned int)>   paletteWG_05(colors_rgb_WG_05);
const PaletteConstBWD<sizeof(colors_rgb_WG_05) / sizeof(unsigned int)>   paletteWG_05_inv(colors_rgb_WG_05);

const unsigned int colors_rgb_WG_06[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fdfefd,0x00fcfefc,0x00fbfdfb,0x00fafdfa,0x00f9fcf9,0x00f8fcf8,0x00f7fcf7,0x00f5fbf5,0x00f4fbf4,0x00f2faf2,0x00f1f9f1,0x00eff9ef,0x00edf8ed,0x00ebf7eb,0x00e9f6e9,0x00e7f6e7,0x00e5f5e5,0x00e2f4e2,0x00e0f3e0,0x00ddf2dd,
  0x00daf1da,0x00d7f0d7,0x00d5efd5,0x00d1eed1,0x00ceecce,0x00cbebcb,0x00c8eac8,0x00c4e9c4,0x00c1e7c1,0x00bde6bd,0x00b9e4b9,0x00b5e3b5,0x00b1e1b1,0x00ade0ad,0x00a9dea9,0x00a4dda4,0x00a0dba0,0x009bd99b,0x0097d797,0x0092d692,0x008dd48d,0x0088d288,0x0083d083,0x007ece7e,0x0079cc79,0x0073ca73,0x006ec86e,0x0068c668,0x0062c462,0x005cc25c,0x0057bf57,0x0050bd50,0x004abb4a,0x0044b844,0x003eb63e,0x0037b337,0x0031b131,0x002aae2a,0x0023ac23,0x001ca91c,0x0015a715,0x000ea40e,0x0007a107
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_06) / sizeof(unsigned int)>   paletteWG_06(colors_rgb_WG_06);
const PaletteConstBWD<sizeof(colors_rgb_WG_06) / sizeof(unsigned int)>   paletteWG_06_inv(colors_rgb_WG_06);

const unsigned int colors_rgb_WG_07[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fcfefc,0x00fbfdfb,0x00fafdfa,0x00f8fcf8,
  0x00f7fcf7,0x00f5fbf5,0x00f3faf3,0x00f1f9f1,0x00eff9ef,0x00ecf8ec,0x00e9f7e9,0x00e6f5e6,0x00e3f4e3,0x00e0f3e0,0x00dcf2dc,0x00d9f0d9,0x00d5efd5,0x00d1edd1,0x00cdeccd,0x00c8eac8,0x00c4e8c4,0x00bfe7bf,0x00bae5ba,0x00b5e3b5,0x00afe1af,0x00aadfaa,0x00a4dca4,0x009eda9e,0x0098d898,0x0091d591,0x008bd38b,0x0084d084,0x007dce7d,0x0076cb76,0x006fc96f,0x0068c668,0x0060c360,0x0058c058,0x0050bd50,0x0048ba48,0x0040b740,0x0037b337,0x002eb02e,0x0025ad25,0x001ca91c,0x0013a613,0x0009a209
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_07) / sizeof(unsigned int)>   paletteWG_07(colors_rgb_WG_07);
const PaletteConstBWD<sizeof(colors_rgb_WG_07) / sizeof(unsigned int)>   paletteWG_07_inv(colors_rgb_WG_07);

const unsigned int colors_rgb_WG_08[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fdfefd,0x00fbfdfb,0x00f9fdf9,0x00f7fcf7,0x00f4fbf4,0x00f1f9f1,0x00eef8ee,0x00eaf7ea,0x00e5f5e5,0x00e1f3e1,0x00dbf1db,0x00d6efd6,0x00d0edd0,0x00c9eac9,0x00c2e8c2,0x00bbe5bb,0x00b3e2b3,0x00abdfab,0x00a3dca3,0x009ad99a,0x0090d590,0x0087d187,0x007cce7c,0x0072ca72,0x0067c567,0x005bc15b,0x004fbd4f,0x0043b843,0x0036b336,0x0029ae29,0x001ca91c,0x000ea40e
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_08) / sizeof(unsigned int)>   paletteWG_08(colors_rgb_WG_08);
const PaletteConstBWD<sizeof(colors_rgb_WG_08) / sizeof(unsigned int)>   paletteWG_08_inv(colors_rgb_WG_08);

const unsigned int colors_rgb_WG_09[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fbfdfb,0x00f7fcf7,0x00f2faf2,0x00ebf7eb,0x00e2f4e2,0x00d8f0d8,0x00cceccc,0x00bfe7bf,0x00b0e1b0,0x009fdb9f,0x008dd48d,0x0079cc79,0x0064c464,0x004dbc4d,0x0035b335,0x001ba91b
  };
const PaletteConstFWD<sizeof(colors_rgb_WG_09) / sizeof(unsigned int)>   paletteWG_09(colors_rgb_WG_09);
const PaletteConstBWD<sizeof(colors_rgb_WG_09) / sizeof(unsigned int)>   paletteWG_09_inv(colors_rgb_WG_09);

////////////////////////////////////////////////////////////////    WhiteYellow

const unsigned int colors_rgb_WY_02[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,
  0x00fdfefe,0x00fdfefe,0x00fdfefe,0x00fdfefe,0x00fcfefe,0x00fcfefe,0x00fbfefe,0x00fbfefe,0x00fbfefe,0x00fafefe,0x00fafefe,0x00f9fefe,0x00f9fefe,0x00f8fefe,0x00f7fefe,0x00f7fefe,0x00f6fefe,0x00f5fefe,0x00f5fefe,0x00f4fefe,0x00f3fefe,0x00f2fefe,0x00f2fefe,0x00f1fefe,0x00f0fefe,0x00effefe,0x00eefdfd,0x00edfdfd,0x00ecfdfd,0x00ebfdfd,0x00eafdfd,0x00e9fdfd,0x00e8fdfd,0x00e7fdfd,0x00e6fdfd,0x00e5fdfd,0x00e3fdfd,0x00e2fdfd,0x00e1fdfd,0x00e0fdfd,0x00defcfc,0x00ddfcfc,0x00dcfcfc,
  0x00dafcfc,0x00d9fcfc,0x00d7fcfc,0x00d6fcfc,0x00d5fcfc,0x00d3fcfc,0x00d1fcfc,0x00d0fcfc,0x00cefbfb,0x00cdfbfb,0x00cbfbfb,0x00c9fbfb,0x00c8fbfb,0x00c6fbfb,0x00c4fbfb,0x00c2fbfb,0x00c1fbfb,0x00bffbfb,0x00bdfafa,0x00bbfafa,0x00b9fafa,0x00b7fafa,0x00b5fafa,0x00b3fafa,0x00b1fafa,0x00affafa,0x00adf9f9,0x00abf9f9,0x00a9f9f9,0x00a7f9f9,0x00a4f9f9,0x00a2f9f9,0x00a0f9f9,0x009ef8f8,0x009bf8f8,0x0099f8f8,0x0097f8f8,0x0094f8f8,0x0092f8f8,0x0090f8f8,0x008df7f7,0x008bf7f7,0x0088f7f7,
  0x0086f7f7,0x0083f7f7,0x0081f7f7,0x007ef6f6,0x007bf6f6,0x0079f6f6,0x0076f6f6,0x0073f6f6,0x0070f6f6,0x006ef5f5,0x006bf5f5,0x0068f5f5,0x0065f5f5,0x0062f5f5,0x005ff5f5,0x005cf4f4,0x005af4f4,0x0057f4f4,0x0054f4f4,0x0050f4f4,0x004df3f3,0x004af3f3,0x0047f3f3,0x0044f3f3,0x0041f3f3,0x003ef2f2,0x003af2f2,0x0037f2f2,0x0034f2f2,0x0031f2f2,0x002df1f1,0x002af1f1,0x0027f1f1,0x0023f1f1,0x0020f1f1,0x001cf0f0,0x0019f0f0,0x0015f0f0,0x0012f0f0,0x000eefef,0x000aefef,0x0007efef,0x0003efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_02) / sizeof(unsigned int)>   paletteWY_02(colors_rgb_WY_02);
const PaletteConstBWD<sizeof(colors_rgb_WY_02) / sizeof(unsigned int)>   paletteWY_02_inv(colors_rgb_WY_02);

const unsigned int colors_rgb_WY_03[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fdfefe,0x00fdfefe,0x00fcfefe,0x00fcfefe,0x00fcfefe,0x00fbfefe,0x00fbfefe,0x00fafefe,0x00f9fefe,0x00f9fefe,0x00f8fefe,0x00f8fefe,0x00f7fefe,0x00f6fefe,0x00f5fefe,0x00f4fefe,0x00f4fefe,0x00f3fefe,0x00f2fefe,0x00f1fefe,0x00f0fefe,0x00effefe,0x00eefdfd,0x00edfdfd,0x00ecfdfd,0x00eafdfd,
  0x00e9fdfd,0x00e8fdfd,0x00e7fdfd,0x00e5fdfd,0x00e4fdfd,0x00e3fdfd,0x00e1fdfd,0x00e0fdfd,0x00defcfc,0x00ddfcfc,0x00dbfcfc,0x00dafcfc,0x00d8fcfc,0x00d6fcfc,0x00d5fcfc,0x00d3fcfc,0x00d1fcfc,0x00cffcfc,0x00cefbfb,0x00ccfbfb,0x00cafbfb,0x00c8fbfb,0x00c6fbfb,0x00c4fbfb,0x00c2fbfb,0x00c0fbfb,0x00befafa,0x00bcfafa,0x00b9fafa,0x00b7fafa,0x00b5fafa,0x00b3fafa,0x00b0fafa,0x00aef9f9,0x00acf9f9,0x00a9f9f9,0x00a7f9f9,0x00a4f9f9,0x00a2f9f9,0x009ff9f9,0x009df8f8,0x009af8f8,0x0097f8f8,
  0x0095f8f8,0x0092f8f8,0x008ff8f8,0x008cf7f7,0x0089f7f7,0x0087f7f7,0x0084f7f7,0x0081f7f7,0x007ef6f6,0x007bf6f6,0x0078f6f6,0x0075f6f6,0x0071f6f6,0x006ef5f5,0x006bf5f5,0x0068f5f5,0x0065f5f5,0x0061f5f5,0x005ef4f4,0x005bf4f4,0x0057f4f4,0x0054f4f4,0x0050f4f4,0x004df3f3,0x0049f3f3,0x0046f3f3,0x0042f3f3,0x003ef2f2,0x003bf2f2,0x0037f2f2,0x0033f2f2,0x0030f2f2,0x002cf1f1,0x0028f1f1,0x0024f1f1,0x0020f1f1,0x001cf0f0,0x0018f0f0,0x0014f0f0,0x0010f0f0,0x000cefef,0x0008efef,0x0004efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_03) / sizeof(unsigned int)>   paletteWY_03(colors_rgb_WY_03);
const PaletteConstBWD<sizeof(colors_rgb_WY_03) / sizeof(unsigned int)>   paletteWY_03_inv(colors_rgb_WY_03);

const unsigned int colors_rgb_WY_04[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fdfefe,0x00fdfefe,0x00fcfefe,0x00fcfefe,0x00fbfefe,0x00fbfefe,0x00fafefe,0x00f9fefe,0x00f8fefe,0x00f8fefe,
  0x00f7fefe,0x00f6fefe,0x00f5fefe,0x00f4fefe,0x00f3fefe,0x00f2fefe,0x00f1fefe,0x00f0fefe,0x00effefe,0x00edfdfd,0x00ecfdfd,0x00ebfdfd,0x00e9fdfd,0x00e8fdfd,0x00e6fdfd,0x00e5fdfd,0x00e3fdfd,0x00e2fdfd,0x00e0fdfd,0x00defcfc,0x00dcfcfc,0x00dbfcfc,0x00d9fcfc,0x00d7fcfc,0x00d5fcfc,0x00d3fcfc,0x00d1fcfc,0x00cffcfc,0x00cdfbfb,0x00cafbfb,0x00c8fbfb,0x00c6fbfb,0x00c4fbfb,0x00c1fbfb,0x00bffbfb,0x00bcfafa,0x00bafafa,0x00b7fafa,0x00b5fafa,0x00b2fafa,0x00affafa,0x00acf9f9,0x00aaf9f9,
  0x00a7f9f9,0x00a4f9f9,0x00a1f9f9,0x009ef8f8,0x009bf8f8,0x0098f8f8,0x0095f8f8,0x0091f8f8,0x008ef7f7,0x008bf7f7,0x0088f7f7,0x0084f7f7,0x0081f7f7,0x007df6f6,0x007af6f6,0x0076f6f6,0x0073f6f6,0x006ff6f6,0x006bf5f5,0x0068f5f5,0x0064f5f5,0x0060f5f5,0x005cf4f4,0x0058f4f4,0x0054f4f4,0x0050f4f4,0x004cf3f3,0x0048f3f3,0x0044f3f3,0x0040f3f3,0x003bf2f2,0x0037f2f2,0x0033f2f2,0x002ef1f1,0x002af1f1,0x0025f1f1,0x0021f1f1,0x001cf0f0,0x0017f0f0,0x0013f0f0,0x000eefef,0x0009efef,0x0004efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_04) / sizeof(unsigned int)>   paletteWY_04(colors_rgb_WY_04);
const PaletteConstBWD<sizeof(colors_rgb_WY_04) / sizeof(unsigned int)>   paletteWY_04_inv(colors_rgb_WY_04);

const unsigned int colors_rgb_WY_05[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fdfefe,0x00fcfefe,0x00fcfefe,0x00fbfefe,0x00fafefe,0x00fafefe,0x00f9fefe,0x00f8fefe,0x00f7fefe,0x00f6fefe,0x00f5fefe,0x00f3fefe,0x00f2fefe,0x00f1fefe,0x00effefe,0x00eefdfd,0x00ecfdfd,0x00ebfdfd,0x00e9fdfd,0x00e7fdfd,0x00e5fdfd,0x00e3fdfd,0x00e2fdfd,0x00dffdfd,0x00ddfcfc,0x00dbfcfc,0x00d9fcfc,0x00d7fcfc,0x00d4fcfc,0x00d2fcfc,0x00cffcfc,0x00cdfbfb,0x00cafbfb,0x00c7fbfb,0x00c5fbfb,0x00c2fbfb,
  0x00bffbfb,0x00bcfafa,0x00b9fafa,0x00b6fafa,0x00b2fafa,0x00affafa,0x00acf9f9,0x00a8f9f9,0x00a5f9f9,0x00a1f9f9,0x009ef8f8,0x009af8f8,0x0096f8f8,0x0092f8f8,0x008ef7f7,0x008bf7f7,0x0086f7f7,0x0082f7f7,0x007ef6f6,0x007af6f6,0x0076f6f6,0x0071f6f6,0x006df5f5,0x0068f5f5,0x0064f5f5,0x005ff4f4,0x005af4f4,0x0056f4f4,0x0051f4f4,0x004cf3f3,0x0047f3f3,0x0042f3f3,0x003df2f2,0x0037f2f2,0x0032f2f2,0x002df1f1,0x0027f1f1,0x0022f1f1,0x001cf0f0,0x0017f0f0,0x0011f0f0,0x000befef,0x0005efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_05) / sizeof(unsigned int)>   paletteWY_05(colors_rgb_WY_05);
const PaletteConstBWD<sizeof(colors_rgb_WY_05) / sizeof(unsigned int)>   paletteWY_05_inv(colors_rgb_WY_05);

const unsigned int colors_rgb_WY_06[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fdfefe,0x00fcfefe,0x00fbfefe,0x00fafefe,0x00f9fefe,0x00f8fefe,0x00f7fefe,0x00f5fefe,0x00f4fefe,0x00f2fefe,0x00f1fefe,0x00effefe,0x00edfdfd,0x00ebfdfd,0x00e9fdfd,0x00e7fdfd,0x00e5fdfd,0x00e2fdfd,0x00e0fdfd,0x00ddfcfc,
  0x00dafcfc,0x00d7fcfc,0x00d5fcfc,0x00d1fcfc,0x00cefbfb,0x00cbfbfb,0x00c8fbfb,0x00c4fbfb,0x00c1fbfb,0x00bdfafa,0x00b9fafa,0x00b5fafa,0x00b1fafa,0x00adf9f9,0x00a9f9f9,0x00a4f9f9,0x00a0f9f9,0x009bf8f8,0x0097f8f8,0x0092f8f8,0x008df7f7,0x0088f7f7,0x0083f7f7,0x007ef6f6,0x0079f6f6,0x0073f6f6,0x006ef5f5,0x0068f5f5,0x0062f5f5,0x005cf4f4,0x0057f4f4,0x0050f4f4,0x004af3f3,0x0044f3f3,0x003ef2f2,0x0037f2f2,0x0031f2f2,0x002af1f1,0x0023f1f1,0x001cf0f0,0x0015f0f0,0x000eefef,0x0007efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_06) / sizeof(unsigned int)>   paletteWY_06(colors_rgb_WY_06);
const PaletteConstBWD<sizeof(colors_rgb_WY_06) / sizeof(unsigned int)>   paletteWY_06_inv(colors_rgb_WY_06);

const unsigned int colors_rgb_WY_07[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fcfefe,0x00fbfefe,0x00fafefe,0x00f8fefe,
  0x00f7fefe,0x00f5fefe,0x00f3fefe,0x00f1fefe,0x00effefe,0x00ecfdfd,0x00e9fdfd,0x00e6fdfd,0x00e3fdfd,0x00e0fdfd,0x00dcfcfc,0x00d9fcfc,0x00d5fcfc,0x00d1fcfc,0x00cdfbfb,0x00c8fbfb,0x00c4fbfb,0x00bffbfb,0x00bafafa,0x00b5fafa,0x00affafa,0x00aaf9f9,0x00a4f9f9,0x009ef8f8,0x0098f8f8,0x0091f8f8,0x008bf7f7,0x0084f7f7,0x007df6f6,0x0076f6f6,0x006ff6f6,0x0068f5f5,0x0060f5f5,0x0058f4f4,0x0050f4f4,0x0048f3f3,0x0040f3f3,0x0037f2f2,0x002ef1f1,0x0025f1f1,0x001cf0f0,0x0013f0f0,0x0009efef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_07) / sizeof(unsigned int)>   paletteWY_07(colors_rgb_WY_07);
const PaletteConstBWD<sizeof(colors_rgb_WY_07) / sizeof(unsigned int)>   paletteWY_07_inv(colors_rgb_WY_07);

const unsigned int colors_rgb_WY_08[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fefefe,0x00fdfefe,0x00fbfefe,0x00f9fefe,0x00f7fefe,0x00f4fefe,0x00f1fefe,0x00eefdfd,0x00eafdfd,0x00e5fdfd,0x00e1fdfd,0x00dbfcfc,0x00d6fcfc,0x00d0fcfc,0x00c9fbfb,0x00c2fbfb,0x00bbfafa,0x00b3fafa,0x00abf9f9,0x00a3f9f9,0x009af8f8,0x0090f8f8,0x0087f7f7,0x007cf6f6,0x0072f6f6,0x0067f5f5,0x005bf4f4,0x004ff4f4,0x0043f3f3,0x0036f2f2,0x0029f1f1,0x001cf0f0,0x000eefef
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_08) / sizeof(unsigned int)>   paletteWY_08(colors_rgb_WY_08);
const PaletteConstBWD<sizeof(colors_rgb_WY_08) / sizeof(unsigned int)>   paletteWY_08_inv(colors_rgb_WY_08);

const unsigned int colors_rgb_WY_09[] = { 
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,
  0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00ffffff,0x00fefefe,0x00fbfefe,0x00f7fefe,0x00f2fefe,0x00ebfdfd,0x00e2fdfd,0x00d8fcfc,0x00ccfbfb,0x00bffbfb,0x00b0fafa,0x009ff9f9,0x008df7f7,0x0079f6f6,0x0064f5f5,0x004df3f3,0x0035f2f2,0x001bf0f0
  };
const PaletteConstFWD<sizeof(colors_rgb_WY_09) / sizeof(unsigned int)>   paletteWY_09(colors_rgb_WY_09);
const PaletteConstBWD<sizeof(colors_rgb_WY_09) / sizeof(unsigned int)>   paletteWY_09_inv(colors_rgb_WY_09);


//const IPalette* const ppalettes_spec[] = { &palette_spec_BlYeRd, &palette_spec_BlGnYe, &palette_spec_GnYe };
//const IPalette* const ppalettes_spec_inv[] = { &palette_spec_BlYeRd_inv, &palette_spec_BlGnYe_inv, &palette_spec_GnYe_inv };
//const char*     const ppalettenames_spec[] = { "spec_BlYeRd", "spec_BlGnYe", "spec_GnYe" };

const IPalette* const ppalettes_spec[] = { &palette_spec_BlYeRd, &palette_spec_BlGnYe, &palette_spec_GnYe,
                                           &paletteWR_02, &paletteWR_03, &paletteWR_04, &paletteWR_05, &paletteWR_06, &paletteWR_07, &paletteWR_08, &paletteWR_09, 
                                           &paletteWG_02, &paletteWG_03, &paletteWG_04, &paletteWG_05, &paletteWG_06, &paletteWG_07, &paletteWG_08, &paletteWG_09, 
                                           &paletteWY_02, &paletteWY_03, &paletteWY_04, &paletteWY_05, &paletteWY_06, &paletteWY_07, &paletteWY_08, &paletteWY_09
                                         };
const IPalette* const ppalettes_spec_inv[] = { &palette_spec_BlYeRd_inv, &palette_spec_BlGnYe_inv, &palette_spec_GnYe_inv,
                                               &paletteWR_02_inv, &paletteWR_03_inv, &paletteWR_04_inv, &paletteWR_05_inv, &paletteWR_06_inv, &paletteWR_07_inv, &paletteWR_08_inv, &paletteWR_09_inv, 
                                               &paletteWG_02_inv, &paletteWG_03_inv, &paletteWG_04_inv, &paletteWG_05_inv, &paletteWG_06_inv, &paletteWG_07_inv, &paletteWG_08_inv, &paletteWG_09_inv, 
                                               &paletteWY_02_inv, &paletteWY_03_inv, &paletteWY_04_inv, &paletteWY_05_inv, &paletteWY_06_inv, &paletteWY_07_inv, &paletteWY_08_inv, &paletteWY_09_inv
                                             };
const char*     const ppalettenames_spec[] = { "spec_BlYeRd", "spec_BlGnYe", "spec_GnYe",
                                               "spec_WR_02", "spec_WR_03", "spec_WR_04", "spec_WR_05", "spec_WR_06", "spec_WR_07", "spec_WR_08", "spec_WR_09", 
                                               "spec_WG_02", "spec_WG_03", "spec_WG_04", "spec_WG_05", "spec_WG_06", "spec_WG_07", "spec_WG_08", "spec_WG_09", 
                                               "spec_WY_02", "spec_WY_03", "spec_WY_04", "spec_WY_05", "spec_WY_06", "spec_WY_07", "spec_WY_08", "spec_WY_09"
                                             };

#endif // PALETTES_SPEC_H
